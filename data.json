{"ld": {"1": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDx0aXRsZT5Eb2M8L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChldnQpIHsKICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwgZmFsc2UpOwogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNvcHkiLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vIENoYW5nZSB0aGUgY29waWVkIHRleHQgaWYgeW91IHdhbnQKICAgICAgICAgICAgZXZ0LmNsaXBib2FyZERhdGEuc2V0RGF0YSgidGV4dC9wbGFpbiIsICJDb3B5aW5nIGlzIG5vdCBhbGxvd2VkIG9uIHRoaXMgd2VicGFnZSIpOwogICAgICAgICAgICAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGNvcHkgYWN0aW9uCiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sIGZhbHNlKTsKICAgIDwvc2NyaXB0PgogICAgPHN0eWxlPgogICAgICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fuczp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAnKTsKCiAgICAgICAgLyogTk8gU0VMRUNUICsgSElHSExJR0hUIENPTE9SICovCiAgICAgICAgKiB7CiAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQoKICAgICAgICAqOjpzZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgKjo6LW1vei1zZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgLyogc3R5bGluZyB0ZXh0IGNvbnRlbnQgKi8KICAgICAgICBib2R5IHsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDRweDsKICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjNweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgICAgd29yZC1zcGFjaW5nOiAycHg7CiAgICAgICAgfQoKICAgICAgICBjZW50ZXIgewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDsKICAgICAgICB9CgogICAgICAgIGgzIHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgICB9CgogICAgICAgIHNwYW4gewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj5Vbml0IDEKICAgICAgICA8YnI+IEVkdWNhdGlvbiBhbmQgSHVtYW5pdHk8L2NlbnRlcj4KICAgIDxicj4KICAgIDxoMz5XYXlzIHdpdGggd29yZHM8L2gzPgogICAgPGJyPgogICAgPHNwYW4+QS4gRmluZCB0aGUgd29yZHMgZnJvbSB0aGUgdGV4dCB3aGljaCBtZWFuIHRoZSBmb2xsb3dpbmcuPC9zcGFuPgogICAgPGJyPgogICAgYS4gYSBtZXNzZW5nZXIgb3IgcmVwcmVzZW50YXRpdmUsIGVzcGVjaWFsbHkgb25lIG9uIGEgZGlwbG9tYXRpYyBtaXNzaW9uICZuZGFzaDsgPHNwYW4+ZW52b3k8L3NwYW4+CiAgICA8YnI+CiAgICBiLiB0aGUgc3RhdGUgb3IgcXVhbGl0eSBvZiBiZWluZyB3b3J0aHkgb2YgaG9ub3Igb3IgcmVzcGVjdCAmbmRhc2g7IDxzcGFuPmRpZ25pdHk8L3NwYW4+CiAgICA8YnI+CiAgICBjLiBoYXJtIGRvbmUgdG8gc29tZW9uZSBpbiByZXNwb25zZSB0byBoYXJtICZuZGFzaDsgPHNwYW4+cmV2ZW5nZTwvc3Bhbj4KICAgIDxicj4KICAgIGQuIGEgcGVyc29uIHdobyBob2xkcyBleHRyZW1lIHZpZXdzIGluIHBvbGl0aWNhbCBvciByZWxpZ2lvdXMgbWF0dGVycyAmbmRhc2g7IDxzcGFuPmV4dHJlbWlzdDwvc3Bhbj4KICAgIDxicj4KICAgIGUuIHN5bXBhdGhldGljIHBpdHkgYW5kIGNvbmNlcm4gZm9yIHRoZSBzdWZmZXJpbmdzIG9yIG1pc2ZvcnR1bmVzIG9mIG90aGVycyAmbmRhc2g7IDxzcGFuPmNvbXBhc3Npb248L3NwYW4+CiAgICA8YnI+CiAgICBmLiBhIHBlcnNvbiB3aG8gaXMgYmVsaWV2ZWQgdG8gc3BlYWsgZm9yIEdvZCAmbmRhc2g7IDxzcGFuPnByb3BoZXQ8L3NwYW4+CiAgICA8YnI+CiAgICBnLiB0aGUgc3R1ZHkgb2YgdGhlIG5hdHVyZSBvZiBrbm93bGVkZ2UsIHJlYWxpdHkgYW5kIGV4aXN0ZW5jZSAmbmRhc2g7IDxzcGFuPnBoaWxvc29waHk8L3NwYW4+CiAgICA8YnI+CiAgICBoLiB0aGUgdXNlIG9mIHBoeXNpY2FsIGZvcmNlIHNvIGFzIHRvIGluanVyZSwgYWJ1c2UsIGRhbWFnZSBvciBkZXN0cm95ICZuZGFzaDsgPHNwYW4+dmlvbGVuY2U8L3NwYW4+CiAgICA8YnI+CiAgICBpLiBhbiB1bnJlYXNvbmFibGUgZGlzbGlrZSBvZiBhIHBhcnRpY3VsYXIgZ3JvdXAgb2YgcGVvcGxlIG9yIHRoaW5ncyAmbmRhc2g7IDxzcGFuPnByZWp1ZGljZTwvc3Bhbj4KICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxzcGFuPkIuIE1hdGNoIHRoZSB3b3JkcyBvbiB0aGUgbGVmdCB3aXRoIHRoZWlyIG9wcG9zaXRlIG1lYW5pbmdzIG9uIHRoZSByaWdodC48L3NwYW4+CiAgICA8YnI+CiAgICBob25vdXIgJm5kYXNoOyBkaXNncmFjZQogICAgPGJyPgogICAgaW5ub2NlbnQgJm5kYXNoOyBndWlsdHkKICAgIDxicj4KICAgIGJydXRhbGl0eSAmbmRhc2g7IGtpbmRuZXNzCiAgICA8YnI+CiAgICBmb3JnaXZlbmVzcyAmbmRhc2g7IHB1bmlzaG1lbnQKICAgIDxicj4KICAgIGlsbGl0ZXJhY3kgJm5kYXNoOyBsaXRlcmFjeQogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+Qy4gVXNpbmcgZGljdGlvbmFyeTwvc3Bhbj4KICAgIDxicj4KICAgIDxzcGFuPmEuIFN0dWR5IHRoZSBkaWN0aW9uYXJ5IGVudHJ5IGFib3ZlIGFuZCBhbnN3ZXIgdGhlc2UgcXVlc3Rpb25zLjwvc3Bhbj4KICAgIDxicj4KICAgIDxzcGFuPmkuIFdoYXQgaXMgdGhlIGhlYWR3b3JkIGluIHRoZSBmaXJzdCBlbnRyeT88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBIdW1hbml0eQogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+aWkuIEhvdyBtYW55IG1lYW5pbmdzIG9mIHRoZSB3b3JkICZsc3F1bztodW1hbml0eSZyc3F1bzsgYXJlIGdpdmVuPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IEZvdXIgbWVhbmluZ3Mgb2YgdGhlIHdvcmQgJ2h1bWFuaXR5JyBhcmUgZ2l2ZW4gYW5kIHRoZXkgYXJlOwogICAgPGJyPgogICAgJm5kYXNoOyBwZW9wbGUgaW4gZ2VuZXJhbAogICAgPGJyPgogICAgJm5kYXNoOyB0aGUgc3RhdGUgb2YgYmVpbmcgYSBwZXJzb24gcmF0aGVyIHRoYW4gYSBnb2QsIGFuIGFuaW1hbCBvciBhIG1hY2hpbmUKICAgIDxicj4KICAgICZuZGFzaDsgdGhlIHF1YWxpdHkgb2YgYmVpbmcga2luZCB0byBwZW9wbGUgYW5kIGFuaW1hbHMgYnkgbWFraW5nIHN1cmUgdGhhdCB0aGV5IGRvIG5vdCBzdWZmZXIgbW9yZSB0aGFuIGlzCiAgICBuZWNlc3NhcnkKICAgIDxicj4KICAgICZuZGFzaDsgdGhlIHN1YmplY3RzIG9mIHN0dWR5IHRoYXQgYXJlIGFib3V0IHRoZSB3YXkgcGVvcGxlIHRoaW5rIGFuZCBiZWhhdmUsIGZvciBleGFtcGxlIGxpdGVyYXR1cmUsCiAgICBsYW5ndWFnZSwgaGlzdG9yeSBhbmQgcGhpbG9zb3BoeQogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+aWlpLiBXaGF0IGRvIHRoZSBhYmJyZXZpYXRpb25zIFUsIE9QUCwgcGwsIGFuZCBzdGggc3RhbmQgZm9yPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7CiAgICA8YnI+CiAgICBVICZuZGFzaDsgdW5jb3VudGFibGUKICAgIDxicj4KICAgIE9QUCAmbmRhc2g7IG9wcG9zaXRlCiAgICA8YnI+CiAgICBwbCAmbmRhc2g7IHBsdXJhbAogICAgPGJyPgogICAgc3RoICZuZGFzaDsgc29tZXRoaW5nCiAgICA8YnI+CiAgICA8YnI+CiAgICA8c3Bhbj5pdi4gV2hhdCBpcyB0aGUgQnJpdGlzaCBFbmdsaXNoIHNwZWxsaW5nIG9mICZsc3F1bztodW1hbml6ZSZyc3F1bzs/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIEJyaXRpc2ggRW5nbGlzaCBzcGVsbGluZyBvZiAmbHNxdW87aHVtYW5pemUmcnNxdW87IGlzIGh1bWFuaXNlLgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+di4gSG93IGlzIHRoZSB3b3JkICZsc3F1bztodW1hbml6ZSZyc3F1bzsgcHJvbm91bmNlZD88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgd29yZCAmbHNxdW87aHVtYW5pemUmcnNxdW87IGlzIHByb25vdW5jZWQgYXMgLyYjNzEyO2hqdSYjNzIwO20mIzYwMTtuYSYjNjE4O3ogLy4KICAgIDxicj4KICAgIDxicj4KICAgIDxzcGFuPgogICAgICAgIHZpLiBJZiB3ZSBzYXkgRXZlcnkgcGVyc29uIHNob3VsZCBoYXZlIHRoZSBzZW5zZSBvZiBodW1hbml0eSwgd2hpY2ggbWVhbmluZyBvZiAmbHNxdW87aHVtYW5pdHkmcnNxdW87IGlzCiAgICAgICAgYXBwbGllZD8KICAgIDwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBxdWFsaXR5IG9mIGJlaW5nIGtpbmQgdG8gcGVvcGxlIGFuZCBhbmltYWxzIGJ5IG1ha2luZyBzdXJlIHRoYXQgdGhleSBkbyBub3Qgc3VmZmVyIG1vcmUKICAgIHRoYW4gaXMgbmVjZXNzYXJ5IC8gdGhlIHF1YWxpdHkgb2YgYmVpbmcgaHVtYW5lLgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+Yi4gQXJyYW5nZSB0aGUgZm9sbG93aW5nIHdvcmRzIGluIGFscGhhYmV0aWNhbCBvcmRlci48L3NwYW4+CiAgICA8YnI+CiAgICA8c3Bhbj5pLiBhZHZhbmNlIGFuYWx5c2lzIGFtdXNlIGFzc3VyZSBhbGxlcmd5IGF0dGFpbiBhaWQgYW54aWV0eSBhY3V0ZSBhZ3JlZW1lbnQ8L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBhY3V0ZSwgYWR2YW5jZSwgYWdyZWVtZW50LCBhaWQsIGFsbGVyZ3ksIGFtdXNlLCBhbmFseXNpcywgYW54aWV0eSwgYXNzdXJlLCBhdHRhaW4KICAgIDxicj4KICAgIDxicj4KICAgIDxzcGFuPmlpLiBzbW9rZSBzbWFsbCBzbWFydCBzcGVha2luZyBzbWVsbGluZyBzbW9vdGhseSBzbXVnZ2xlciBzbWFzaGVkIHNtZWFyaW5nIHNtYWxscG94PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgc21hbGwsIHNtYWxscG94LCBzbWFydCwgc21hc2hlZCxzcGVha2luZywgc21lYXJpbmcsIHNtZWxsaW5nLCBzbW9rZSwgc21vb3RobHksIHNtdWdnbGVyLAogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+aWlpLiB0ZXJtaW5hbCB0ZXJtaW5hdGUgdGVybWlub2xvZ3kgdGVybWl0ZSB0ZXJtcyB0ZXJyYWNlIHRlcnJpYmxlIHRlcnJpYmx5PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgdGVybWluYWwsIHRlcm1pbmF0ZSwgdGVybWlub2xvZ3ksIHRlcm1zLCB0ZXJyYWNlLCB0ZXJyaWJsZSwgdGVycml0b3J5LCB0ZXJyb3IKICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxoMz5Db21wcmVoZW5zaW9uPC9oMz4KICAgIDxicj4KICAgIDxzcGFuPkFuc3dlciB0aGUgZm9sbG93aW5nIHF1ZXN0aW9ucy48L3NwYW4+CiAgICA8YnI+CiAgICA8c3Bhbj5hLiBXaHkgZGlkIHRoZSBzcGVha2VyIHJlY2VpdmUgdGhvdXNhbmRzIG9mIGdvb2Qtd2lzaGVzIGNhcmRzIGFuZCBnaWZ0cyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZD88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBTcGVha2VyIE1hbGFsYSBZb3VzYWZ6YWkgd2FzIGEgc21hbGwgY2hpbGQgYnV0IGRlc3BpdGUgaGVyIGFnZSwgc2hlIHBsYXllZCByZW1hcmthYmxlIHJvbGUgZm9yIHRoZQogICAgYmV0dGVybWVudCBvZiBjaGlsZHJlbiBkZXByaXZlZCBmcm9tIGVkdWNhdGlvbiBhbmQgdGhlaXIgZnVuZGFtZW50YWwgcmlnaHRzLCB3b21lbiBhbmQgc3BlY2lhbGx5IHRoZSBzdXBwcmVzc2VkCiAgICBjb21tdW5pdGllcyBieSB0aGUgZXh0cmVtaXN0LCBUYWxpYmFuLiBTbywgZm9yIGVuY291cmFnaW5nIGhlciBhbmQgdG8gcmVzcGVjdCBoZXIgc3VwcG9ydCwgcGVvcGxlIHNlbnQgaGVyIHRob3VzYW5kcwogICAgb2YgZ29vZCB3aXNoZXMgY2FyZHMgYW5kIGdpZnRzIGFsbCBvdmVyIHRoZSB3b3JsZC4KICAgIDxicj4KICAgIDxicj4KICAgIDxzcGFuPgogICAgICAgIGIuIEFjY29yZGluZyB0byB0aGUgc3BlYWtlciwgd2hhdCBhcmUgaHVuZHJlZHMgb2YgaHVtYW4gcmlnaHRzIGFjdGl2aXN0cyBhbmQgc29jaWFsIHdvcmtlcnMgc3RydWdnbGluZwogICAgICAgIGZvcj8KICAgIDwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IEFjY29yZGluZyB0byB0aGUgc3BlYWtlciwgaHVuZHJlZHMgb2YgaHVtYW4gYWN0aXZpc3QgYW5kIHNvY2lhbCB3b3JrZXJzIGFyZSBzdHJ1Z2dsaW5nIGZvciBhc2NlcnRhaW5pbmcgdGhlCiAgICBmdW5kYW1lbnRhbCByaWdodHMgdG8gYWxsIHBlb3BsZSBhbmQgYnJpbmdpbmcgdGhlIGRlcHJpdmVkIGNvbW11bml0eSBpbiB0aGUgYXBwcm9hY2ggb2YgZWR1Y2F0aW9uLCBhbmQgYWxzbyBmb3IKICAgIHBlYWNlIGFuZCBlcXVhbGl0eS4KICAgIDxicj4KICAgIDxicj4KICAgIDxzcGFuPmMuIFdoYXQgaGFzIHNoZSBsZWFybnQgZnJvbSBHYW5kaGk/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgU2hlIGxlYXJudCB0aGUgdmFsdWUgb2Ygbm9udmlvbGVuY2UgZnJvbSBHYW5kaGkuCiAgICA8YnI+CiAgICA8YnI+CiAgICA8c3Bhbj5kLiBJbiB3aGF0IHNlbnNlIGlzIHBlYWNlIG5lY2Vzc2FyeSBmb3IgZWR1Y2F0aW9uPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFBlYWNlZnVsIGVudmlyb25tZW50IGlzIHRoZSBiYXNpYyByZXF1aXJlbWVudCBmb3IgYmV0dGVyIGVkdWNhdGlvbi4gV2FycyBhbmQgY29uZmxpY3RzIGNyZWF0ZXMgYSBmZWFyZnVsCiAgICBlbnZpcm9ubWVudCBhbmQgYXZvaWRzIHN0dWRlbnQgZnJvbSBnb2luZyB0byBzY2hvb2wuIEluIHRoaXMgc2Vuc2UsIHBlYWNlIGlzIG5lY2Vzc2FyeSBmb3IgZWR1Y2F0aW9uLgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+ZS4gQWNjb3JkaW5nIHRvIHRoZSBzcGVha2VyLCB3aGF0IGFyZSB0aGUgbWFpbiBwcm9ibGVtcyBmYWNlZCBieSBib3RoIG1lbiBhbmQgd29tZW4/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgQWNjb3JkaW5nIHRvIHRoZSBzcGVha2VyLCBwb3ZlcnR5LCBpZ25vcmFuY2UsIGluanVzdGljZSwgcmFjaXNtIGFuZCBkZXByaXZhdGlvbiBvZiByaWdodHMgYXJlIHRoZSBtYWluCiAgICBwcm9ibGVtcyBmYWNlZCBieSBib3RoIG1lbiBhbmQgd29tZW4uCiAgICA8YnI+CiAgICA8YnI+CiAgICA8c3Bhbj5mLiBXaGF0IGlzIE1hbGFsYSBjYWxsaW5nIHVwb24gYWxsIGdvdmVybm1lbnRzPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IE1hbGFsYSBpcyBjYWxsaW5nIHVwb24gYWxsIGdvdmVybm1lbnRzIHRvIGVuc3VyZSBmcmVlIGVkdWNhdGlvbiB0byBhbGwgY2hpbGRyZW4gdG8gZmlnaHQgYWdhaW5zdCB0ZXJyb3Jpc20KICAgIGFuZCB2aW9sZW5jZSBhbmQgdG8gcHJvdGVjdCB0aGVtIGZyb20gYnJ1dGFsaXR5IGFuZCBoYXJtLgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+Zy4gV2hhdCBpcyB0aGUgbWFpbiBtZXNzYWdlIG9mIHRoaXMgc3BlZWNoPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBtYWluIG1lc3NhZ2Ugb2YgdGhpcyBzcGVlY2ggaXMgZWR1Y2F0aW9uIGlzIHRoZSBvbmx5IHNvbHV0aW9uIHRvIGVyYWRpY2F0ZSB0aGUgcHJvYmxlbXMgbGlrZQogICAgaWxsaXRlcmFjeSwgdGVycm9yaXNtLCB2aW9sZW5jZSBhbmQgaGFyYXNzbWVudCBvZiBmdW5kYW1lbnRhbHMgcmlnaHRzIG9mIGh1bWFuLiBTbywgYXV0aG9yaXplZCBsZXZlbCBzaG91bGQKICAgIHByaW9yaXRpemUgZnJlZSBlZHVjYXRpb24gdG8gYWxsLgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPGgzPkNyaXRpY2FsIHRoaW5raW5nPC9oMz4KICAgIDxicj4KICAgIDxicj4KICAgIDxzcGFuPgogICAgICAgIGEuICZsc3F1bztBbGwgY2hpbGRyZW4gaGF2ZSB0aGUgcmlnaHQgdG8gcXVhbGl0eSBlZHVjYXRpb24uIEhvdyBjYW4gd2UgZW5zdXJlIHRoaXMgcmlnaHQgdG8gZXZlcnkgY2hpbGQ/CiAgICAgICAgRGlzY3VzcyB0aGUgcm9sZSBvZiB0aGUgZ292ZXJubWVudCBhbmQgdGhlIHBhcmVudHMgdG8gbWFrZSBzdXJlIHRoYXQgZXZlcnkgY2hpbGQgY2FuIGF0dGVuZAogICAgICAgIHNjaG9vbC4mcnNxdW87CiAgICA8L3NwYW4+CiAgICA8YnI+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBOZXBhbCBoYXMgcHV0IGluIHBsYWNlIGEgc3RyaWN0IGxlZ2FsIGFycmFuZ2VtZW50IHRvIGVyYWRpY2F0ZSBpbGxpdGVyYWN5LiBUaGUgMjAxOCBhY3Qgc3RyaWN0bHkgaW5zdHJ1Y3RzCiAgICBwYXJlbnRzIHRvIGVucm9sbCB0aGVpciBzdHVkZW50cyBpbiBzY2hvb2xzLiBFZHVjYXRpb24gaXMgdGhlIHJpZ2h0IG9mIGxpZmUuIEl0IGlzIHRoZSBtb3N0IGluZGlzcGVuc2FibGUgcGFydCBvZgogICAgaHVtYW4gbGlmZSwgZXNwZWNpYWxseSBpbiB0aGUgbGlmZSBvZiBjaGlsZHJlbi4gQ2hpbGRyZW4gYWxsIG92ZXIgdGhlIHdvcmxkIGRlc2VydmUgcXVhbGl0eSBlZHVjYXRpb24gd2hpY2ggaXMKICAgIGV4cGVjdGVkIHRvIGJyaW5nIGFib3V0IGNvbXBsZXRlIGRpbWVuc2lvbmFsIHRyYW5zZm9ybWF0aW9uIGluIHRoZWlyIGxhdGVyIGxpZmUuIEluIHRoaXMgcmVnYXJkLCB3ZSBzaG91bGQgZW5zdXJlCiAgICB0aGlzIGVkdWNhdGlvbmFsIHJpZ2h0IHRvIGV2ZXJ5IGNoaWxkIHRocm91Z2hvdXQgdGhlIHdvcmxkLgogICAgPGJyPgogICAgPGJyPgogICAgV2UgY29tZSB0byBoZWFyIHRoZSBwcm92ZXJiIOKAnG1vcm5pbmcgc2hvd3MgdGhlIGRheSBpbiB0aGUgbWFya2V0IHBsYWNlIHdoZW4gcGVvcGxlIGFyZSBpbnZvaWNlIGluIHRoZSBzb2NpYWwgYW5kCiAgICBhY2FkZW1pYyBkaXNjb3Vyc2UuIFRoaXMgc2hvdWxkIGJlIHdlbGwgYXBwbGllZCBpbiB0aGUgY29udGV4dCBvZiBjaGlsZHJlbiBwcm92aWRlZCB0aGF0IHRoZSBjaGlsZHJlbiBnZXQgdGhlCiAgICBvcHBvcnR1bml0eSBvZiBxdWFsaXR5IGVkdWNhdGlvbiBzbyB0aGF0IHRoZXkgY291bGQgYmUgbW9yYWxseSBhbmQgcHJvZmVzc2lvbmFsbHkgZHJlc3NlZCBpbiBsYXRlciBsaWZlLgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+CiAgICAgICAgYi4mcnNxdW87RG8geW91IHRoaW5rIHRoYXQgdGhlcmUgaXMgc3RpbGwgZGlzY3JpbWluYXRpb24gYmV0d2VlbiBzb25zIGFuZCBkYXVnaHRlcnMgaW4gdGVybXMgb2YKICAgICAgICBwcm92aWRpbmcgZWR1Y2F0aW9uIGluIG91ciBjb3VudHJ5PyBXaGF0IHN0cmF0ZWdpZXMgZG8geW91IHN1Z2dlc3QgdG8gb3ZlcmNvbWUgc3VjaCBkaXNjcmltaW5hdGlvbgogICAgICAgIGFnYWluc3QgZ2lybHM/JnJzcXVvOwogICAgPC9zcGFuPgogICAgPGJyPgogICAgPGJyPgogICAgJiMxMDE0MDsgT3VyIGNvdW50cnkgc2luY2UgYW50aXF1aXR5IGhhcyBiZWVuIHJ1bGVkIG92ZXIgYnkgdGhlIHRyYWRpdGlvbmFsIGdlbmRlciByb2xlcyB3aGljaCBhcmUgY29uc3RydWN0ZWQgb3V0CiAgICBvZiBwcmVqdWRpY2VzIGFuZCBtYWxlIGRvbWluYXRpb24uIE5vIHNwYWNlIG9yIHZlcnkgbGltaXRlZCBzcGFjZSBpcyBwcm92aWRlZCB0byB0aGUgZ2lybHMgYW5kIHdvbWVuLiBUaGlzIGhhcHBlbnMKICAgIGluIHRoZSBzZWN0b3Igb2YgZWR1Y2F0aW9uIG9wcG9ydHVuaXRpZXMgYXJlIHByb3ZpZGVkIHRvIHRoZSBzb25zIGFuZCB0aGUgYm95cyBidXQgdGhlIGRhdWdodGVycyBhbmQgdGhlIGdpcmxzIGFyZQogICAgZGVwcml2ZWQgb2YgdGhlaXIgaW52YWx1YWJsZSBvcHBvcnR1bml0aWVzLgogICAgPGJyPgogICAgPGJyPgogICAgU2V2ZXJhbCBzdHJhdGVnaWVzIHNob3VsZCBiZSBhcHBsaWVkIGJ5IGFsbCB0byBhZmZvcmQgZWR1Y2F0aW9uIHRvIHRoZSBnaXJscyB0byBicmluZyBhYm91dCB0aGUgcHJvc3Blcml0eSBvZiB0aGUKICAgIG5hdGlvbi4gU29tZSBvZiB0aGVtIGFyZSBsaXN0ZWQgYmVsb3c6CiAgICA8YnI+PGJyPgogICAgMS4gR2VuZGVyIGJpYXNlcyBzaG91bGQgYmUgZW5kZWQuCiAgICA8YnI+PGJyPgogICAgMi4gVHJhZGl0aW9uYWwgZ2VuZGVyIHJvbGVzIGNvbnN0cnVjdGVkIG91dCBvZiBtYWxlIGhlZ2Vtb255IHNob3VsZCBiZSBjb3JyZWN0ZWQuCiAgICA8YnI+PGJyPgogICAgMy4gVGhlIGludGVybmFsaXplZCBwb3RlbnRpYWxpdGllcyBvZiB0aGUgZGF1Z2h0ZXJzIHNob3VsZCBiZSBhY2tub3dsZWRnZWQuCiAgICA8YnI+PGJyPgogICAgNC4gVGhlIHByZWZlcmVuY2UgZm9yIHRoZSBzb24gc2hvdWxkIGJlIHJlbW92ZWQgZnJvbSB0aGUgcGVvcGxl4oCZcyBwc3ljaG9sb2d5LgogICAgPGJyPjxicj4KICAgIDUuIFRoZSBtb25leSBnaXZlbiBpbiB0aGUgbmFtZSBvZiBkb3dyeSBzaG91bGQgYmUgaW52ZXN0ZWQgaW4gdGhlIGdpcmwncyBlZHVjYXRpb24uCgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+CiAgICAgICAgYy4gJmxzcXVvO0EgQ2hpbmVzZSBwaGlsb3NvcGhlciBDb25mdWNpdXMgc2FpZCwgJmxkcXVvO0lmIHlvdXIgcGxhbiBpcyBmb3Igb25lIHllYXIsIHBsYW50IHJpY2U7IGlmIHlvdXIKICAgICAgICBwbGFuIGlzIGZvciB0ZW4geWVhcnMsIHBsYW50IHRyZWVzOyBpZiB5b3VyIHBsYW4gaXMgZm9yIG9uZSBodW5kcmVkIHllYXJzLCBlZHVjYXRlIGNoaWxkcmVuLiZyZHF1bzsgV2hhdAogICAgICAgIGlzIHRoZSBtZWFuaW5nIG9mIHRoaXMgc2F5aW5nPyBFbGFib3JhdGUgdGhpcyB3aXRoIGV4YW1wbGVzLiZyc3F1bzsKICAgIDwvc3Bhbj4KICAgIDxicj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBtZWFuaW5nIG9mIHRoaXMgc2F5aW5nIGlzIHRoYXQgb3VyIG9iamVjdGl2ZXMgZGV0ZXJtaW5lIG91ciBiZWhhdmlvdXIuIElmIHdlIGhhdmUgc2hvcnQgdGVybSBvYmplY3RpdmVzIHRoZW4gd2UgbmVlZCBzaG9ydCB0ZXJtIGVmZm9ydHMgd2hlcmVhcyBsb25nIHJhbmdlIG9iamVjdGl2ZXMgdGFrZSBsb25nZXIgdG8gYWNoaWV2ZS4gSWYgd2Uga25vdyB3aGVyZSB3ZSB3YW50IHRvIGdvIGFuZCBob3cgbG9uZyBpdCB3aWxsIHRha2UgdXMgdG8gZ2V0IHRoZXJlLCB3aGF0IHdlIGhhdmUgdG8gZG8gdG8gYWNoaWV2ZSwgd2UgY2FuIGVhc2lseSBjYXJ2ZSBvdXIgcGF0aC4KICAgIDxicj4KCiAgICBUaGUgZGVjbGFyYXRpb24gYWxzbyBzdHJlc3NlcyB0aGUgdmFsdWUgb2YgZWR1Y2F0aW9uIGZvciBzb2NpZXRhbCBncm93dGguIEVkdWNhdGlvbiBpcyB2aXRhbCBpbiBkZXZlbG9waW5nIHNraWxscywgdmFsdWVzLCBhbmQgYXdhcmVuZXNzLiBJdCBtb3VsZHMgYSBwZXJzb24uIExvbmctdGVybSwgZWR1Y2F0aW9uIGJyaW5ncyBoaWdoZXIgYmVuZWZpdHMuIFRvbW9ycm93J3MgY2l2aWxpc2VkIGFuZCBtb3JhbCBzb2NpZXR5IHdpbGwgYmUgZWR1Y2F0ZWQgeW91bmdzdGVycyB0b2RheS4gVGhlIGdyZWF0ZXN0IHBvc3NpYmxlIGVkdWNhdGlvbiBmb3IgY2hpbGRyZW4gaXMgYW4gaW52ZXN0bWVudCBpbiB0aGUgZnV0dXJlIG9mIHRoZSB3aG9sZSBzb2NpZXR5LgoKICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxicj4KICAgIDxoMz5HcmFtbWFyPC9oMz4KICAgIDxicj4KICAgIDxzcGFuPkNsYXNzaWZ5IHRoZSB1bmRlcmxpbmVkIHdvcmRzIGludG8gZGlmZmVyZW50IHdvcmQgY2xhc3Nlcy48L3NwYW4+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8c3Bhbj5hLiBUaGUgbWFuIHdobyBpcyB3ZWFyaW5nIGdsYXNzZXMgaXMgbXkgdW5jbGUmcnNxdW87cyBmcmllbmQuPC9zcGFuPgogICAgPGJyPgogICAgd2hvICZuZGFzaDsgcHJvbm91bgogICAgPGJyPgogICAgd2VhcmluZyAmbmRhc2g7IHZlcmIKICAgIDxicj4KICAgIG15ICZuZGFzaDsgZGV0ZXJtaW5lcgogICAgPGJyPjxicj4KICAgIDxzcGFuPmIuIEkgYm91Z2h0IGEgcm91bmQgdGFibGUgaW4gdGhlIHN1cGVybWFya2V0Ljwvc3Bhbj4KICAgIDxicj4KICAgIHJvdW5kICZuZGFzaDsgYWRqZWN0aXZlCiAgICA8YnI+CiAgICB0aGUgJm5kYXNoOyBkZXRlcm1pbmVyCiAgICA8YnI+PGJyPgogICAgPHNwYW4+Yy4gQWxhcywgc2hlIGlzIGRlYWQuPC9zcGFuPgogICAgPGJyPgogICAgQWxhcyAmbmRhc2g7IGludGVyamVjdGlvbgogICAgPGJyPjxicj4KICAgIDxzcGFuPmQuIEhhcmkgd29ya3MgdmVyeSBoYXJkIGFsbCB0aGUgdGltZSBidXQgaGlzIHdpZmUgaXMgdmVyeSBsYXp5Ljwvc3Bhbj4KICAgIDxicj4KICAgIGhhcmQgJm5kYXNoOyBhZHZlcmIKICAgIDxicj4KICAgIHdpZmUgJm5kYXNoOyBub3VuCiAgICA8YnI+CiAgICB2ZXJ5ICZuZGFzaDsgYWR2ZXJiCiAgICA8YnI+PGJyPgogICAgPHNwYW4+ZS4gSSBoYXZlIG5ldmVyIGJlZW4gdG8gSmFwYW4uPC9zcGFuPgogICAgPGJyPgogICAgbmV2ZXIgJm5kYXNoOyBhZHZlcmIKICAgIDxicj48YnI+CiAgICA8c3Bhbj5mLiBBbm4gZHJvdmUgYSBjYXIgc2FmZWx5Ljwvc3Bhbj4KICAgIDxicj4KICAgIEFubiAmbmRhc2g7IE5vdW4KICAgIDxicj4KICAgIFNhZmVseSAmbmRhc2g7IEFkdmVyYgogICAgPGJyPjxicj4KICAgIDxzcGFuPmcuIE5vYm9keSBoYXMgY2xhaW1lZCBpdC48L3NwYW4+CiAgICA8YnI+CiAgICBub2JvZHkgJm5kYXNoOyBwcm9ub3VuCiAgICA8YnI+CiAgICBpdCAmbmRhc2g7IHByb25vdW4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5oLiBTaGUgY3V0IGhlciBoYW5kIHdpdGggYSBrbmlmZS48L3NwYW4+CiAgICA8YnI+CiAgICBoZXIgJm5kYXNoOyBkZXRlcm1pbmVyCiAgICA8YnI+CiAgICB3aXRoICZuZGFzaDsgcHJlcG9zaXRpb24KICAgIDxicj48YnI+CiAgICA8c3Bhbj5pLiBUaGV5IGhhdmUgcG9zdHBvbmVkIHRoZSBwcm9ncmFtIGJlY2F1c2Ugb2YgcmFpbi48L3NwYW4+CiAgICA8YnI+CiAgICBoYXZlICZuZGFzaDsgdmVyYgogICAgPGJyPgogICAgYmVjYXVzZSBvZiAmbmRhc2g7IHByZXBvc2l0aW9uCiAgICA8YnI+CiAgICByYWluICZuZGFzaDsgbm91bgogICAgPGJyPjxicj4KICAgIDxzcGFuPmouIEV2ZXJ5Ym9keSBjb21lcyB0byB0aGUgcGFydHkuPC9zcGFuPgogICAgPGJyPgogICAgZXZlcnlib2R5ICZuZGFzaDsgcHJvbm91bgogICAgPGJyPjxicj4KICAgIDxzcGFuPmsuIEFsbCBzdWNoIHBlb3BsZSBvdWdodCB0byBiZSBhdm9pZGVkLjwvc3Bhbj4KICAgIDxicj4KICAgIGFsbCAmbmRhc2g7IGRldGVybWluZXIKICAgIDxicj4KICAgIHN1Y2ggJm5kYXNoOyBkZXRlcm1pbmVyCiAgICA8YnI+PGJyPgogICAgPHNwYW4+bC4gQWxsIG9mIHRoZSBmb29kIGhhcyBnb25lLjwvc3Bhbj4KICAgIDxicj4KICAgIGFsbCAmbmRhc2g7IHByb25vdW4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5tLiBXaGF0IHdhcyB0aGF0IG5vaXNlPzwvc3Bhbj4KICAgIDxicj4KICAgIHdoYXQgJm5kYXNoOyBwcm9ub3VuCiAgICA8YnI+PGJyPgogICAgPHNwYW4+bi4gT25lIG11c3Qgbm90IGJvYXN0IG9mIG9uZSdzIG93biBzdWNjZXNzLjwvc3Bhbj4KICAgIDxicj4KICAgIG9uZSAmbmRhc2g7IHByb25vdW4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5vLiBOb2JvZHkgd2FzIHRoZXJlIHRvIHJlc2N1ZSB0aGUgY2hpbGQuPC9zcGFuPgogICAgPGJyPgogICAgbm9ib2R5ICZuZGFzaDsgcHJvbm91bgogICAgPGJyPjxicj4KICAgIDxzcGFuPnAuIE5laXRoZXIgb2YgdGhlIGFjY3VzYXRpb25zIGlzIHRydWUuPC9zcGFuPgogICAgPGJyPgogICAgbmVpdGhlciAmbmRhc2g7IHByb25vdW4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5xLiBOZWl0aGVyIGFuc3dlciBpcyBjb3JyZWN0Ljwvc3Bhbj4KICAgIDxicj4KICAgIG5laXRoZXIgJm5kYXNoOyBkZXRlcm1pbmVyCiAgICA8YnI+PGJyPgogICAgPHNwYW4+ci4gSGVyZSBpcyB0aGUgYm9vayB0aGF0IHlvdSBsZW50IG1lLjwvc3Bhbj4KICAgIDxicj4KICAgIGhlcmUgJm5kYXNoOyBhZHZlcmIKICAgIDxicj4KICAgIHRoYXQgJm5kYXNoOyBwcm9ub3VuCiAgICA8YnI+PGJyPgogICAgPHNwYW4+cy4gV2l0aG91dCBoZWFsdGggdGhlcmUgaXMgbm8gaGFwcGluZXNzLjwvc3Bhbj4KICAgIDxicj4KICAgIHdpdGhvdXQgJm5kYXNoOyBwcm9wb3NpdGlvbgogICAgPGJyPgogICAgaGVhbHRoICZuZGFzaDsgbm91bgogICAgPGJyPgogICAgaGFwcGluZXNzICZuZGFzaDsgbm91bgogICAgPGJyPgogICAgPGJyPgogICAgPGJyPgogICAgPHNwYW4+SWYgeW91IGhhdmUgYW55IHN1Z2dlc3Rpb25zIG9yIGZlZWRiYWNrcywgcGxlYXNlIHdyaXRlIHRvIHVzIGF0IHBsdXMyaGVscEBnbWFpbC5jb208L3NwYW4+CiAgICA8YnI+CiAgICA8YnI+CjwvYm9keT4KCjwvaHRtbD4=", "2": "", "3": "", "4": "", "5": "", "6": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "7": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "8": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "9": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "10": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "11": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "12": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "13": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "14": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "15": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "16": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "17": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "18": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "19": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "20": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4="}, "ss": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "7": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4="}, "poems": {"1": "", "2": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDx0aXRsZT5Eb2M8L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChldnQpIHsKICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwgZmFsc2UpOwogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNvcHkiLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vIENoYW5nZSB0aGUgY29waWVkIHRleHQgaWYgeW91IHdhbnQKICAgICAgICAgICAgZXZ0LmNsaXBib2FyZERhdGEuc2V0RGF0YSgidGV4dC9wbGFpbiIsCiAgICAgICAgICAgICJDb3B5aW5nIGlzIG5vdCBhbGxvd2VkIG9uIHRoaXMgd2VicGFnZSIpOyAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGNvcHkgYWN0aW9uCiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sIGZhbHNlKTsKICAgIDwvc2NyaXB0PgogICAgPHN0eWxlPgogICAgICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fuczp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAnKTsKCiAgICAgICAgLyogTk8gU0VMRUNUICsgSElHSExJR0hUIENPTE9SICovCiAgICAgICAgKiB7CiAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQoKICAgICAgICAqOjpzZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgKjo6LW1vei1zZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgLyogc3R5bGluZyB0ZXh0IGNvbnRlbnQgKi8KICAgICAgICBib2R5IHsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDRweDsKICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjNweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgICAgd29yZC1zcGFjaW5nOiAycHg7CiAgICAgICAgfQoKICAgICAgICBjZW50ZXIgewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDsKICAgICAgICB9CgogICAgICAgIGgzIHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgICB9CgogICAgICAgIHNwYW4gewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj5BIFJlZCwgUmVkIFJvc2U8L2NlbnRlcj4KCiAgICA8YnI+CiAgICAKICAgIDxoMz5VbmRlcnN0YW5kaW5nIHRoZSB0ZXh0PC9oMz4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5BbnN3ZXIgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnMuPC9zcGFuPgogICAgPGJyPjxicj4KICAgIDxzcGFuPmEuIFRvIHdoaWNoIHR3byB0aGluZ3MgZG9lcyB0aGUgc3BlYWtlciBjb21wYXJlIGhpcyBsb3ZlIGluIHRoZSBmaXJzdCBzdGFuemE/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIHR3byB0aGluZ3MgdG8gd2hpY2ggdGhlIHNwZWFrZXIgY29tcGFyZXMgaGlzIGxvdmUgaW4gdGhlIGZpcnN0IHN0YW56YSBhcmUgcmVkIHJvc2UgYW5kIG1lbG9keSAobXVzaWMpLgogICAgPGJyPjxicj4KICAgIDxzcGFuPmIuIFdoYXQgZG9lcyB0aGUgc3BlYWtlciBwcm9taXNlIGluIHRoZSBzZWNvbmQgYW5kIHRoaXJkIHN0YW56YXM/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIHNwZWFrZXIgcHJvbWlzZXMgdG8gbG92ZSBoaXMgYmVsb3ZlZCB1bnRpbCB0aGUgZWFydGhseSBzZWFzIGhhdmUgYmVjb21lIGRyeSwgcm9ja3MgaGF2ZSBtZWx0ZWQgYnkgdGhlIGhlYXQgb2YgdGhlIHN1biBhbmQgaHVtYW4gbGlmZSBoYXMgZW5kZWQgaW4gdGhlIHNlY29uZCBhbmQgdGhpcmQgc3Rhbnphcy4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5jLiBXaGF0IGltYWdlcnkgZG9lcyBoZSB1c2UgaW4gaGlzIHByb21pc2UsIGFuZCB3aHkgZG8geW91IHRoaW5rIGhlIHVzZXMgc3VjaCBsYW5ndWFnZT88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBIZSB1c2VzIHRoZSBpbWFnZXJ5IG9mIGRyeSBzZWFzLCBtZWx0ZWQgcm9ja3MsIGVuZGVkIGh1bWFuIGxpZmUgaW4gdGhlIHNlY29uZCBhbmQgdGhpcmQgc3RhbnphIGFuZCBhbiBpbWFnZSBvZiBhIGxvbmcgam91cm5leSBpbiB0aGUgZm91cnRoIHN0YW56YS4gSSB0aGluayBoZSB1c2VzIHN1Y2ggbGFuZ3VhZ2UgYmVjYXVzZSBoaXMgbG92ZSBpcyBzbyBkZWVwIGFuZCB0cnVlIGZvciBoaXMgYmVsb3ZlZC4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5kLiBJbiB0aGUgbGFzdCBzdGFuemEsIHdoYXQgZXZlbnQgaXMgYWJvdXQgdG8gaGFwcGVuIGJ5IG1lbnRpb25pbmcgdGhlIG51bWJlciBvZiBtaWxlcz88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBJbiB0aGUgbGFzdCBzdGFuemEsIHRoZSBldmVudCBvZiByZWNvbmNpbGlhdGlvbiBpcyBhYm91dCB0byBoYXBwZW4gYnkgbWVudGlvbmluZyB0aGUgbnVtYmVyIG9mIG1pbGVzLgogICAgPGJyPjxicj4KICAgIDxzcGFuPmUuIFdoaWNoIGltYWdlIGluIHRoZSBwb2VtIGRvIHlvdSBmaW5kIHRoZSBtb3N0IG1lbW9yYWJsZSBvciBzdXJwcmlzaW5nIGFuZCB3aHk/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIG1vc3QgbWVtb3JhYmxlIG9yIHN1cnByaXNpbmcgaW1hZ2UgSSBmaW5kIGluIHRoZSBwb2VtIGlzIG9mIHRoZSBkcnkgc2VhcyB0aHJvdWdob3V0IHRoZSB3b3JsZCwgYmVjYXVzZSB0aGUgc3BlYWtlcidzIHByb21pc2UgaXMgbWFuYWdlZCBpbiBhIHZlcnkgaW50ZXJlc3Rpbmcgd2F5LiAKICAgIDxicj48YnI+CiAgICA8YnI+PGJyPgogICAgPGJyPgogICAgPGgzPlJlZmVyZW5jZSB0byB0aGUgY29udGV4dDwvaDM+CiAgICA8YnI+PGJyPgogICAgPHNwYW4+YS4gV2hhdCBjYW4geW91IGluZmVyIGFib3V0IHRoZSBzcGVha2VyJnJzcXVvO3MgZGV2b3Rpb24gdG8gaGlzIGJlbG92ZWQgZnJvbSB0aGUgZm9sbG93aW5nIGxpbmVzPzwvc3Bhbj4KICAgIDxicj4KICAgIDxpPkFuZCBJIHdpbGwgY29tZSBhZ2FpbiwgbXkgbG92ZSwgVGhvJnJzcXVvOyBpdCB3ZXJlIHRlbiB0aG91c2FuZCBtaWxlITwvaT4KICAgIDxicj4KICAgICYjMTAxNDA7ICBUaGlzIGJlYXV0aWZ1bCBwcm9taXNpbmcgbGluZSBoYXMgYmVlbiB0YWtlbiBmcm9tIFJvYmVydCBCdXJucyBsb3ZlIHBvZW0gJyBBIFJlZCwgUmVkIFJvc2UuIFdlIGZpbmQgdGhpcyBsaW5lIGF0IHRoZSBlbmQgb2YgdGhlIGZvdXJ0aCBzdGFuemEuIEhlcmUsIHRoZSBzcGVha2VyIGlzIGluIGRlZXAgbG92ZSB3aXRoIGhpcyBiZWxvdmVkLiBIZSBpcyBtYWtpbmcgYSBwcm9taXNlIHdpdGggaGlzIGJlbG92ZWQgYnkgc2F5aW5nIHRoYXQgbm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqb3VybmV5IGlzIGhlIHdpbGwgcmV0dXJuIHRvIGhlciBsaWZlLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj5iLiBXaGF0IGlzIHRoZSB0aGVtZSBvZiB0aGUgcG9lbT88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgbW9zdCBpbXBvcnRhbnQgdGhlbWUgb2YgIkEgUmVkLCBSZWQgUm9zZSIgaXMgdGhlIHBvd2VyIG9mIGxvdmUuIFRoZSBzcGVha2VyIG1ha2VzIGl0IGNsZWFyIHRoYXQgaGUgd2lsbCBsaWtlIGhlciBubyBtYXR0ZXIgd2hhdCB3aWxsIGVudGVyIGJldHdlZW4gdGhlbS4gSGlzIGxvdmUgaXMgc28gZGVlcCBhbmQgaW5lc3RpbWFibGUgdGhhdCBpdCB3aWxsIG5ldmVyIGJlIGV4dGluZ3Vpc2hlZC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yy4gUGFyYXBocmFzZSB0aGUgd2hvbGUgcG9lbSBpbnRvIHNpbXBsZSBwcm9zZSBmb3JtLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7SW4gUm9iZXJ0IEJ1cm5zJ3MgIkEgUmVkLCBSZWQgUm9zZSwiIHRoZSBzcGVha2VyIGJpZHMgZmFyZXdlbGwgdG8gaGlzIGJlbG92ZWQgYW5kIHByb21pc2VzIHRvIHJldHVybiB0byBoZXIsIG5vIG1hdHRlciB0aGUgaGFyZHNoaXAuCiAgICA8YnI+PGJyPgogICAgVGhlIHBvZW0gb3BlbnMgd2l0aCB0aGUgc3BlYWtlciBjb21wYXJpbmcgaGlzIGJlbG92ZWQgdG8gYSByZWQgcm9zZSBhbmQgcHJhaXNpbmcgaGVyIGJlYXV0eS4KICAgIDxicj48YnI+CiAgICBIZSBkZWNsYXJlcyB0aGF0IGhpcyBsb3ZlIGZvciBoZXIgaXMgc28gZGVlcCBhbmQgZXZlcmxhc3RpbmcgdGhhdCBpdCB3aWxsIHN1cnZpdmUgdW50aWwgdGhlIHNlYSBkcmllcyB1cC4KICAgIDxicj48YnI+CiAgICBIZSBwcm9taXNlcyB0aGF0IGFsdGhvdWdoIGhlIG11c3QgbGVhdmUsIGhlIHdpbGwgY29tZSBiYWNrLCBldmVuIGlmIGhlIG11c3QgdHJhdmVsIHRlbiB0aG91c2FuZCBtaWxlcyB0byBkbyBzby4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+CiAgICAgICAgZC4gTGl0ZXJhcnkgZGV2aWNlcyBhcmUgdG9vbHMgdGhhdCBlbmFibGUgdGhlIHdyaXRlcnMgdG8gcHJlc2VudCB0aGVpciBpZGVhcywgZW1vdGlvbnMsIGFuZCBmZWVsaW5ncyBhbmQKICAgICAgICBhbHNvIGhlbHAgdGhlIHJlYWRlcnMgdW5kZXJzdGFuZCB0aG9zZSBtb3JlIHByb2ZvdW5kIG1lYW5pbmdzLiBBbmFseXplIHRoZSBwb2VtIGluIHRlcm1zIG9mIHRoZSBsaXRlcmFyeQogICAgICAgIGRldmljZXMgc3VjaCBhcyBzaW1pbGUsIHN5bWJvbGlzbSwgaW1hZ2VyeSwgYWxsaXRlcmF0aW9uLCBhbmQgYXNzb25hbmNlLgogICAgPC9zcGFuPgogICAgPGJyPjxicj4KICAgICYjMTAxNDA7IFRoZSBwb2V0IGVtcGxveXMgc2V2ZXJhbCBsaXRlcmFyeSBkZXZpY2VzIGxpa2Ugc2ltaWxlLCBzeW1ib2xpc20sIGltYWdlcnksIGFsbGl0ZXJhdGlvbiwgYW5kIGFzc29uYW5jZSB0byBzaG93IHRoZSBiZWF1dHkgb2YgaGlzIGJlbG92ZWQgYW5kIHRoZSBwb3dlciBvZiBoaXMgbG92ZS4KICAgIDxicj48YnI+CiAgICBUaGUgZmlyc3QgbGl0ZXJhcnkgdG9vbCB1c2VkIGluIHRoZSBwb2VtIGlzIHNpbWlsZS4gSXQgaXMgYW4gZXhwcmVzc2lvbiB3aGljaCBpcyB1c2VkIHRvIGNvbXBhcmUgYW4gb2JqZWN0IG9yIGEgcGVyc29uIHdpdGggc29tZXRoaW5nIGVsc2UgdG8gbWFrZSBpdHMgbWVhbmluZyBjbGVhbiB0byB0aGUgcmVhZGVycy4gVGhlcmUgYXJlIHR3byBzaW1pbGVzIHVzZWQgaW4gdGhpcyBwb2VtLiBUaGV5IGFyZSB1c2VkIHdoZW4gdGhlIHNwZWFrZXIgY29tcGFyZXMgaGlzIGJlbG92ZWQgd2l0aCBhIHJlZCByb3NlIGFuZCBzd2VldCBtZWxvZHkuCiAgICA8YnI+PGJyPgogICAgU3ltYm9saXNtIGlzIGFub3RoZXIgbGl0ZXJhcnkgZGV2aWNlIHdoaWNoIGlzIHVzZWQgdG8gc2lnbmlmeSBpZGVhcyBhbmQgcXVhbGl0aWVzIGdpdmluZyB0aGVtIHN5bWJvbGljIG1lYW5pbmcuIEhlcmUgdGhlIHBvZXQgaGFzIHVzZWQg4oCYcm9zZeKAmSBhcyBhIHN5bWJvbCBvZiBsb3ZlLgogICAgPGJyPjxicj4KICAgIEltYWdlcnkgaXMgYSBkaXN0aW5jdCByZXByZXNlbnRhdGlvbiBvZiBzb21ldGhpbmcgdGhhdCBjYW4gYmUgdW5kZXJzdGFuZCB0aHJvdWdoIGZpdmUgc2Vuc2VzLiBSb2JlcnQgaGFzIHVzZWQgdmlzdWFsIGltYWdlcnkgaW4gdGhlIHBvZW0gc3VjaCBhcyBhIHJlZCByb3NlLiAgVGhlcmUgaXMgYSB2aXN1YWwgcGljdHVyZSBvZiBhIHJlZCByb3NlIGluIG91ciBtaW5kIHdoZW4gdGhlIHNwZWFrZXIgY29tcGFyZXMgaGlzIGJlbG92ZWQgd2l0aCBhIHJlZCByb3NlLiBXaGVuIGhlIGVxdWF0ZXMgaGVyIHRvIHRoZSBzd2VldCBtZWxvZHksIGF1ZGl0b3J5IGltYWdlcnkgaXMgdXNlZC4gVG8gY29udmV5IHRoZSBpbnRlbnNpdHkgb2YgaGlzIGFmZmVjdGlvbiwgaGUgdGhlbiBzd2l0Y2hlcyB0byBoeXBlcmJvbGljIGltYWdlcywgYnkgZXhwcmVzc2luZyB0aGF0IGhlIHdpbGwgbG92ZSBoZXIgdW50aWwgdGhlIHNlYXMgYmVjb21lIGRyeSBhbmQgdGhlIHJvY2tzIG1lbHQgaW4gdGhlIHN1bi4gV2UgY2FuIHZpZXcgdGhlIHdvcmxkIG9mIGRyeSBzZWFzIGFuZCBtZWx0ZWQgcm9ja3MgaW4gb3VyIG1pbmQuCiAgICA8YnI+PGJyPgogICAgQWxsaXRlcmF0aW9uIGlzIHRoZSByZXBldGl0aW9uIG9mIGNvbnNvbmFudCBzb3VuZHMgaW4gdGhlIHNhbWUgbGluZSBzdWNoIGFzIC9sLyBhbmQgL3IvIGluIOKAnE8gbXkgTG92ZSBpcyBMaWtlIGEgcmVkLCByZWQgcm9zZS7igJ0KICAgIDxicj48YnI+CiAgICBBc3NvbmFuY2UgaXMgYSBsaXRlcmFyeSBkZXZpY2UgaW4gd2hpY2ggdGhlIHJlcGV0aXRpb24gb2Ygdm93ZWwgc291bmRzIG9jY3VycyBpbiB0aGUgc2FtZSBsaW5lLiBJbiB0aGUgbGluZSDigJhBbmQgSSB3aWxsIGxvdmUgdGhlZSBzdGlsbCwgbXkgZGVhcuKAmSwgdGhlIHZvd2VsIHNvdW5kIC9pLyBpcyByZXBlYXRlZC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+ZS4gV2hhdCBpcyBoeXBlcmJvbGU/IEV4cGxhaW4gaXRzIHB1cnBvc2UgY2l0aW5nIGV4YW1wbGVzIG9mIGh5cGVyYm9sZSB1c2VkIGluIHRoZSBwb2VtLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IEh5cGVyYm9sZSBpcyBhIGxpdGVyYXJ5IHRlY2huaXF1ZSB3aGljaCBpcyB1c2VkIHRvIGV4YWdnZXJhdGUgYSBzdGF0ZW1lbnQgZm9yIHRoZSBzYWtlIG9mIGVtcGhhc2lzLiBUaGUgcG9ldCBoYXMgdXNlZCBoeXBlcmJvbGEgaW4gdGhlIGxhc3QgbGluZSBvZiB0aGUgc2Vjb25kIHN0YW56YSwg4oCcVGlsbCBhJyB0aGUgc2VhcyBnYW5nIGRyeeKAnS4gSGUgc2F5cyB0aGF0IGhpcyBsb3ZlIHdpbGwgZmxvdyBldmVuIHdoZW4gdGhlIHNlYXMgZHJpZXMgdXAuIFRoZSBzZWNvbmQgb25lIGlzIGluIHRoZSB0aGlyZCBzdGFuemEgd2hlcmUgdGhlIHNwZWFrZXIgY2xhaW1lZCwg4oCcQW5kIHRoZSByb2NrcyBtZWx0IHdpJyB0aGUgc3Vu4oCdLiAgSGVyZSwgdGhlIHNwZWFrZXIgc2VlbXMgdG8gYmUgZXhhZ2dlcmF0aW5nIGhpcyBlbW90aW9ucyBpbiB0aGVzZSBsaW5lcyB0byBpbGx1c3RyYXRlIGhpcyBkZXNpcmUgdG8gbG92ZSBoZXIgZm9yZXZlci4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Zi4gV2hhdCBpcyByZWZyYWluPyBXaHkgaXMgaXQgdXNlZCBpbiB0aGUgcG9lbT8gRXhwbGFpbiBjaXRpbmcgYW4gZXhhbXBsZSBmcm9tIHRoZSBwb2VtLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFJlZnJhaW4gaXMgYSBwb2V0aWMgZGV2aWNlIGluIHBvZXRyeSB0aGF0IGZvY3VzZXMgb25seSBvbiByZXBlYXRlZCBsaW5lcyBhdCBhIGNlcnRhaW4gZGlzdGFuY2UuIEl0IGlzIHVzZWQgdG8gcmVpbmZvcmNlIHRoZSBtYWluIHRoZW0gb24gcG9pbnQgb2YgYSBwb2VtLiBJdCBpcyBhbHNvIHVzZWQgdG8gZW1waGFzaXplIHNvbWV0aGluZyBhbmQgdG8gcHJvZHVjZSByaHl0aG0gaW4gdGhlIHBvZW0gYXMgd2VsbC4gV2UgZmluZCBhIHJlZnJhaW4gaGVyZSBpbiB0aGlzIHBvZW0gaW4gdGhlIHNlY29uZCwgdGhpcmQsIGFuZCBmb3VydGggc3RhbnphcyBhbmQgdGhleSBhcmUgYXMgZm9sbG93czoKICAgIDxicj4KICAgIC0gQW5kIEkgd2lsbCBsb3ZlIHRoZWUgc3RpbGwsIG15IGRlYXIKICAgIDxicj4KICAgIC0gVGlsbCBhJyB0aGUgc2VhcyBnYW5nIGRyeQogICAgPGJyPgogICAgLSBBbmQgZmFyZSB0aGVlIHdlZWwKICAgIDxicj48YnI+CiAgICA8YnI+PGJyPgogICAgPGJyPgogICAgPGgzPlJlZmVyZW5jZSBiZXlvbmQgdGhlIHRleHQ8L2gzPgogICAgPGJyPjxicj4KICAgIDxzcGFuPmEuIFdoYXQga2luZCBvZiBsb3ZlIGlzIGV4cHJlc3NlZCBpbiAmcXVvdDtBIFJlZCwgUmVkIFJvc2UmcXVvdDs/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgSW4gdGhpcyBwb2VtLCBBIFJlZCwgUmVkIFJvc2UsIHRoZSBwb2V0IGhhcyBleHByZXNzZWQgaGlzIHJvbWFudGljIGFuZCBpbmVzdGltYWJsZSBsb3ZlIGZvciBoaXMgYmVsb3ZlZC4gSGUgcHJvbWlzZXMgdG8gbG92ZSBoaXMgYmVsb3ZlZCB1bnRpbCB0aGUgZWFydGhseSBzZWFzIGhhdmUgYmVjb21lIGRyeSwgcm9ja3MgaGF2ZSBtZWx0ZWQgYnkgdGhlIGhlYXQgb2YgdGhlIHN1biBhbmQgaHVtYW4gbGlmZSBoYXMgZW5kZWQgYW5kIG1ha2VzIGl0IGNsZWFyIHRoYXQgaGUgd2lsbCBsb3ZlIGhlciB0aWxsIGhpcyBsYXN0IGJyZWF0aC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yi4gRG8geW91IHRoaW5rIHRoYXQgbG92ZSBoYXMgcG93ZXI/IFdoeSBkbyB0aGUgcG9ldHMgY29tcG9zZSBwb2VtcyBhZGRyZXNzaW5nIHRoZWlyIGJlbG92ZWQ/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgWWVzLCBJIHRoaW5rIHRoYXQgbG92ZSBoYXMgcG93ZXIuIEluIGZhY3QgSSBjb25zaWRlciBsb3ZlIGFzIGEgbW9zdCBwb3dlcmZ1bCB0aGluZyB0aGF0IGV4aXN0cyBpbiB0aGUgZW50aXJlIHVuaXZlcnNlLiBMb3ZlIGlzIHRoZSB0aGluZyB0aGF0IGJvdW5kcyBwZW9wbGUgYW5kIGtlZXAgdGhlbSB0b2dldGhlci4gTG92ZSBjYW4gc29tZXRpbWVzIGxlYWQgcGVvcGxlIHRvd2FyZHMgcGVyZmVjdGlvbiB3aGVyZWFzIGl0IG1heSBicmluZyBkZXN0cnVjdGl2ZSByZXN1bHRzIHRvby4gTW9zdCBvZiB0aGUgcG9ldHMgY29tcG9zZSB0aGVpciBwb2VtcyBhZGRyZXNzaW5nIHRoZWlyIGJlbG92ZWQgYmVjYXVzZSBwb2VtIGlzIHRoZSBiZWF1dGlmdWwgYW5kIGJlc3QgbWVkaXVtIHRvIGV4cHJlc3MgdGhlIGZlZWxpbmcgb2YgYSBwZXJzb24uIEV4cHJlc3NpbmcgbG92ZSBpbiBwb2VtIGFkZHMgbW9yZSBiZWF1dHkgdG8gdGhlIHN0b3J5IHRoYW4gaW4gYW5vdGhlciBmb3JtLiBUaHVzIHRoZSBwb2V0cyBjb21wb3NlIHBvZW1zIGFkZHJlc3NpbmcgdGhlaXIgYmVsb3ZlZC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yy4gUG9ldHJ5IGlzIHRoZSBleHByZXNzaW9uIG9mIGZlZWxpbmcgYW5kIGVtb3Rpb25zLiBFeHBsYWluLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IE1vc3Qgb2YgdGhlIGxpdGVyYXJ5IHdvcmtzIG9mIGV4dHJhb3JkaW5hcnkgbWVyaXQgaGF2ZSBiZWVuIHdyaXR0ZW4gdGhyb3VnaCB0aGUgbWVhbnMgb2YgcG9ldHJ5LiBQb2V0cnkgaXMgdGhlIHJlcHJlc2VudGF0aW9uIG9mIHRob3VnaHRzIGFuZCBmZWVsaW5ncyB0aGF0IGVuYWJsZXMgcGVvcGxlIHRvIGV4cHJlc3MgdGhlbXNlbHZlcyBpbiB3cml0aW5nLiBQb2V0cnkgaXMgYSBwZXJmZWN0IHdheSB0byBleHByZXNzIGxvdmUsIGVtb3Rpb25zLCBpbWFnaW5hdGlvbiwgYW5kIGV4Y2hhbmdlIGlkZWFzIGFuZCB0aG91Z2h0cyB3aXRoIG90aGVycy4gUG9ldHJ5IGhvbGRzIHBvd2VyIHRvIGV4cGxhaW4gdGhvc2UgaW50aW1hdGUgbW9tZW50cyBvZiB0aGUgbGlmZSBvZiBodW1hbiBiZWluZ3MuIEl04oCZcyBub3Qgb25seSBhIGpveSB0aGF0IHBvZXRzIGNhbiByZWxhdGUgdG8gdGhlaXIgdmVyc2VzLCBidXQgYWxzbyBncmllZiwgZGVzcGFpciwgZ3JpZWYsIHBhaW4sIGRvdWJ0LCBoYXRyZWQsIGxvdmUsIGNvbXBhc3Npb24sIGRlc2lyZSwgcHJhaXNlLCBmYWl0aCwgcmVzcGVjdCwgYW5kIGhvcGUuIFRoZXJlZm9yZSwgcG9ldHJ5IGNhbiBiZSB0YWtlbiBhcyB0aGUgZXhwcmVzc2lvbiBvZiBmZWVsaW5ncyBhbmQgZW1vdGlvbnMuCiAgICA8YnI+CiAgICA8YnI+PGJyPjxicj48YnI+CgogICAgPHNwYW4+SWYgeW91IGhhdmUgYW55IHN1Z2dlc3Rpb25zIG9yIGZlZWRiYWNrcywgcGxlYXNlIHdyaXRlIHRvIHVzIGF0IHBsdXMyaGVscEBnbWFpbC5jb208L3NwYW4+CgogICAgPGJyPjxicj4KPC9ib2R5PgoKPC9odG1sPg==", "3": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDx0aXRsZT5Eb2M8L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChldnQpIHsKICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwgZmFsc2UpOwogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNvcHkiLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vIENoYW5nZSB0aGUgY29waWVkIHRleHQgaWYgeW91IHdhbnQKICAgICAgICAgICAgZXZ0LmNsaXBib2FyZERhdGEuc2V0RGF0YSgidGV4dC9wbGFpbiIsICJDb3B5aW5nIGlzIG5vdCBhbGxvd2VkIG9uIHRoaXMgd2VicGFnZSIpOwogICAgICAgICAgICAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGNvcHkgYWN0aW9uCiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sIGZhbHNlKTsKICAgIDwvc2NyaXB0PgogICAgPHN0eWxlPgogICAgICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fuczp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAnKTsKCiAgICAgICAgLyogTk8gU0VMRUNUICsgSElHSExJR0hUIENPTE9SICovCiAgICAgICAgKiB7CiAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQoKICAgICAgICAqOjpzZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgKjo6LW1vei1zZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgLyogc3R5bGluZyB0ZXh0IGNvbnRlbnQgKi8KICAgICAgICBib2R5IHsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDRweDsKICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjNweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgICAgd29yZC1zcGFjaW5nOiAycHg7CiAgICAgICAgfQoKICAgICAgICBjZW50ZXIgewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDsKICAgICAgICB9CgogICAgICAgIGgzIHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgICB9CgogICAgICAgIHNwYW4gewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KCjxib2R5PgoKICAgIDxicj4KICAgIDxjZW50ZXI+QWxsIHRoZSBXb3JsZCdzIGEgU3RhZ2U8L2NlbnRlcj4KICAgIDxicj4KICAgIDxoMz5TdW1tYXJ5PC9oMz4KICAgIDxicj4KICAgIFNoYWtlc3BlYXJlIHNlZW1zIHRvIGhhdmUgdGhlIGltcHJlc3Npb24sIGluIHRoZSBwb2VtLCB0aGF0IGh1bWFuIGxpZmUgaXMgbm90IHJlYWwuIFdoYXQgd2Ugc2VlIGFuZCBoZWFyCiAgICBpc24mcnNxdW87dCBhIHJlYWxpdHkuIEh1bWFuIGxpZmUgaXMgYSBwbGF5IG9mIG1ha2UtYmVsaWV2ZS4gSGVyZSBTaGFrZXNwZWFyZSB0cmFjZXMgaHVtYW4gbGlmZSB0aHJvdWdoCiAgICB0aGUgZmFtb3VzIHNldmVuIGFnZXMgJm5kYXNoOyB0aGUgaW5mYW50IGluIGFybXMsIHRoZSBzY2hvb2xib3ksIHRoZSBsb3ZlciwgdGhlIHNvbGRpZXIsIHRoZSBqdXN0aWNlLAogICAgdGhlIHJldGlyZWQgbWFuLCBhbmQgdGhlIHdvcm4tb3V0IHNlbmlvciwgc2lua2luZyBiYWNrIGludG8gZGlzc29sdXRpb24uIFRoZSB3aG9sZSB3b3JsZCZyc3F1bztzIGEKICAgIHN0YWdlLiBXZSZsc3F1bztyZSBvbmx5IGFjdG9ycy4gV2UgZW50ZXIgdGhlIHN0YWdlIGFuZCB3ZSBnbyBvZmYgaXQgYWdhaW4uIE9uZSBtYW4gaW4gaGlzIGxpZmV0aW1lIHBsYXlzCiAgICBhIGxvdCBvZiByb2xlcy4gQXQgZmlyc3QsIGhlIHBsYXlzIHRoZSBwYXJ0IG9mIHRoZSBpbmZhbnQsIGNyeWluZyBhbmQgdGhyb3dpbmcgbWlsayBpbiB0aGUgYXJtcyBvZiB0aGUKICAgIG51cnNlLgogICAgPGJyPjxicj4KICAgIFRoZW4gaGUgcGxheXMgdGhlIHBhcnQgb2YgYSBzY2hvb2xib3kgd2hvIGlzIG5vdCB3aWxsaW5nIHRvIGdvIHRvIHNjaG9vbC4gV2l0aCBoaXMgc2hpbmluZyBmYWNlIG9mIHRoZQogICAgbW9ybmluZywgaGUgdHJ1ZGdlcyBhdCB0aGUgcGFjZSBvZiB0aGUgc25haWwuIFRoZW4gdGhlcmUgY29tZXMgdGhlIGxvdmVyLiBIZSBzaWdocyBsaWtlIGEgZnVybmFjZSwgYW5kCiAgICB3cml0ZXMgcGl0aWZ1bCB2ZXJzZXMsIGFkZHJlc3NpbmcgaGlzIG1pc3RyZXNzLiBIZSBwbGF5cyB0aGUgcm9sZSBvZiBhIHNvbGRpZXIuIEl0JnJzcXVvO3Mgc3RvY2tlZCB3aXRoCiAgICBhbGwgdGhlIHZpb2xlbnQgb2F0aHMuIEhlJnJzcXVvO3Mgd2VhcmluZyBhIHdvbmRlcmZ1bCBiZWFyZC4gSW4gYSBxdWFycmVsLCBoZSBpcyB0b28gc2Vuc2l0aXZlIGFuZCBmYXN0CiAgICBhbmQgaGFzdHkuIEhlIGlzIHdpbGxpbmcgdG8gc2FjcmlmaWNlIGhpcyBsaWZlIGZvciB0aGUgc2FrZSBvZiB1bnN1YnN0YW50aWFsIGdsb3J5LiBUaGVuIGhlIHdpbGwgcGxheQogICAgdGhlIHJvbGUgb2YganVkZ2UuIEhlJnJzcXVvO3MgYSBidWxnaW5nIGJlbGx5IG1hbiwgd2l0aCBzZXZlcmUgZXllcy4gSGUmcnNxdW87cyBhIHZlcnkgd2lzZSBtYW4uCiAgICA8YnI+PGJyPgogICAgVGhlbiBTaGFrZXNwZWFyZSBkZXNjcmliZXMgaGlzIG9sZCBhZ2UuIEl0JnJzcXVvO3MgcHJldHR5IGZ1bm55LiBUaGUgb2xkIG1hbiBpcyBpbiBzbGlwcGVycywgd2VhcmluZwogICAgZ2xhc3Nlcy4gSGlzIG1hbm5pc2ggdm9pY2Ugb25jZSBtb3JlIHR1cm5zIGludG8gYSBjaGlsZCZyc3F1bztzIHNocmlsbCB0b25lLiBUaGUgbGFzdCByb2xlIGlzIHRoZSBzZWNvbmQKICAgIGNoaWxkLiBJdCZyc3F1bztzIHNvIGZ1bGwgb2YgZm9yZ2V0ZnVsbmVzcy4gSXQmcnNxdW87cyB3aXRob3V0IHRlZXRoLCB3aXRob3V0IGV5ZXMsIHdpdGhvdXQgdGFzdGUsCiAgICB3aXRob3V0IGV2ZXJ5dGhpbmcuCiAgICA8YnI+PGJyPjxicj48YnI+CiAgICA8aDM+VW5kZXJzdGFuZGluZyB0aGUgdGV4dDwvaDM+CiAgICA8YnI+CiAgICA8c3Bhbj5BbnN3ZXIgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnMuPC9zcGFuPgogICAgPGJyPgogICAgPHNwYW4+YS4gV2h5IGRvZXMgdGhlIHBvZXQgY29tcGFyZSB0aGUgd29ybGQgd2l0aCBhIHN0YWdlPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBwb2V0IGNvbXBhcmVzIHRoZSB3b3JsZCB0byBhIHN0YWdlIGJlY2F1c2UgaGUgY29uc2lkZXJzIGFsbCBtZW4gYW5kIHdvbWVuIGxpa2UgdGhlIGFjdG9ycyBwZXJmb3JtaW5nCiAgICB0aGVpciBkaWZmZXJlbnQgcm9sZXMgaGVyZSBpbiB0aGlzIHN0YWdlLiBCeSBzdGFnZSBoZSBtZWFucyB0aGUgd29ybGQuCiAgICA8YnI+PGJyPgogICAgPHNwYW4+Yi4gV2hhdCBpcyB0aGUgZmlyc3Qgc3RhZ2UgaW4gYSBodW1hbidzIGxpZmU/IEluIHdoYXQgc2Vuc2UgY2FuIGl0IGJlIGEgdHJvdWJsaW5nIHN0YWdlPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBmaXJzdCBzdGFnZSBpbiBhIGh1bWFuJ3MgbGlmZSBpcyBjaGlsZGhvb2QuIEl0IGNhbiBiZSBhIHRyb3VibGluZyBzdGFnZSBpbiB0aGUgc2Vuc2UgdGhhdCB0aGlzIHN0YWdlIGlzCiAgICBhIGZ1bGx5IGRlcGVuZGVudCBzdGFnZSBhbmQgdGhlIGluZmFudCBjYW4gY3J5IGFuZCBldmVuIHZvbWl0IGFueXRpbWUgaW4gbW90aGVyJ3MgYXJtcy4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5jLiBEZXNjcmliZSB0aGUgc2Vjb25kIHN0YWdlIG9mIGxpZmUgYmFzZWQgb24gdGhlIHBvZW0uPC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIHNlY29uZCBzdGFnZSBvZiBsaWZlIGlzIHRoZSBzdGFnZSBvZiBib3lob29kLiBJbiB0aGlzIHN0YWdlLCB0aGUgYm95IGlzIGEgc2Nob29sIGdvaW5nIHN0dWRlbnQuIEhlCiAgICBjb21wbGFpbnMgYWxsIHRoZSB0aW1lLiBIaXMgZmFjZSBpcyBsaWtlIHNoaW5uaW5nIG1vcm5pbmcuIEhlIGNhcnJpZXMgaGlzIGJhZyBhbmQgcmVsdWN0YW50bHkgZ29lcyB0byBzY2hvb2wgYXMKICAgIHNsb3dseSBhcyBhIHNuYWlsLgogICAgPGJyPjxicj4KICAgIDxzcGFuPmQuIFdoeSBpcyB0aGUgbGFzdCBzdGFnZSBjYWxsZWQgc2Vjb25kIGNoaWxkaG9vZD88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgbGFzdCBzdGFnZSBpcyBjYWxsZWQgc2Vjb25kIGNoaWxkaG9vZCBiZWNhdXNlIGluIHRoaXMgc3RhZ2UgdGhlIG1hbiBsb3NlcyBoaXMgc2Vuc2VzIG9mIHNpZ2h0LCBoZWFyaW5nLAogICAgc21lbGwgYW5kIHRhc3RlIGFuZCBiZWhhdmVzIGFzIGxpa2UgYSBjaGlsZC4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5lLiBJbiB3aGF0IHNlbnNlIGFyZSB3ZSB0aGUgcGxheWVycyBpbiB0aGUgd29ybGQgc3RhZ2U/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgV2UgYXJlIHRoZSBwbGF5ZXJzIGluIHRoZSB3b3JsZCBzdGFnZSBhcyB3ZSBhcHBlYXIgb24gdGhlIHdvcmxkIHN0YWdlIHdoZW4gd2UgZ2V0IGJpcnRoIGFuZCBsZWF2ZSBpdCB3aGVuCiAgICB3ZSBkaWUgbGlrZSB0aGUgYWN0b3JzIGRvIG9uIHRoZSBzdGFnZSBpbiBhIHRoZWF0ZXIuCiAgICA8YnI+PGJyPjxicj48YnI+CiAgICA8aDM+UmVmZXJlbmNlIHRvIHRoZSBjb250ZXh0PC9oMz4KICAgIDxicj4KICAgIDxzcGFuPmEuIEV4cGxhaW4gdGhlIGZvbGxvd2luZyBsaW5lczo8L3NwYW4+CiAgICA8YnI+CiAgICA8aT4KICAgICAgICBBbGwgdGhlIHdvcmxkJ3MgYSBzdGFnZSwKICAgICAgICA8YnI+CiAgICAgICAgQW5kIGFsbCB0aGUgbWVuIGFuZCB3b21lbiBtZXJlbHkgcGxheWVycwogICAgPC9pPgogICAgPGJyPgogICAgPGJyPgogICAgJiMxMDE0MDsgSW4gdGhlIGdpdmVuIGxpbmVzLCB0aGUgcG9ldCBoYXMgY29tcGFyZWQgdGhlIHdob2xlIHdvcmxkIHdpdGggYSBzdGFnZSB3aGVyZSBtZW4gYW5kIHdvbWVuIGFyZSB0aGUgYWN0b3JzLgogICAgQWZ0ZXIgYmlydGgsIGV2ZXJ5IHBlcnNvbiBwZXJmb3JtIHRoZWlyIHJvbGVzIGhlcmUgaW4gdGhpcyB3b3JsZGx5IHN0YWdlIGFuZCBmaW5hbGx5LCBsZWF2ZSB0aGlzIHN0YWdlIG1vdmluZwogICAgdG93YXJkcyB0aGVpciBmaW5hbCBkZXN0aW5hdGlvbiBjYWxsZWQgZGVhdGguCiAgICA8YnI+PGJyPjxicj4KICAgIDxzcGFuPmIuIEV4cGxhaW4gdGhlIGZvbGxvd2luZyBsaW5lcyBicmllZmx5IHdpdGggUmVmZXJlbmNlIHRvIHRoZSBjb250ZXh0Ljwvc3Bhbj4KICAgIDxicj4KICAgIDxpPgogICAgICAgIFRoZXkgaGF2ZSB0aGVpciBleGl0cyBhbmQgdGhlaXIgZW50cmFuY2VzOwogICAgICAgIDxicj4KICAgICAgICBBbmQgb25lIG1hbiBpbiBoaXMgdGltZSBwbGF5cyBtYW55IHBhcnRzLAogICAgPC9pPgogICAgPGJyPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIGdpdmVuIGxpbmVzIGFyZSB0YWtlbiBmcm9tIHRoZSBwb2VtIOKAmEFsbCB0aGUgd29ybGTigJlzIGEgc3RhZ2XigJksIGNvbXBvc2VkIGJ5IFdpbGxpYW0gU2hha2VzcGVhcmUuIFRoZXNlCiAgICBsaW5lcyBleHByZXNzIHNpbWlsYXJpdHkgYmV0d2VlbiB0aGUgcm9sZXMgdGhlIGFjdG9ycyBwbGF5IG9uIHRoZSBzdGFnZSBhbmQgaHVtYW5zIGluIHRoZWlyIGxpdmVzLgogICAgPGJyPjxicj4KICAgIEhlcmUsIHRoZSBwb2V0IGhhcyBzYWlkIHRoYXQgdGhlIHBlb3BsZSBhcnJpdmUgaGVyZSBpbiB0aGlzIHdvcmxkbHkgc3RhZ2UgdGhyb3VnaCBiaXJ0aCBhbmQgbGVhdmUgdGhpcyBzdGFnZSB0aHJvdWdoCiAgICBkZWF0aC4gTGlrZSB0aGUgYWN0b3JzIGluIGEgZHJhbWEsIHdlIGFyZSBhc3NpZ25lZCB2YXJpb3VzIHJvbGVzIHRvIGJlIHBlcmZvcm1lZC4gV2hlbiB3ZSBnZXQgb3VyIHJvbGVzIGNvbXBsZXRlZCB3ZQogICAgcXVpdCB0aGUgc3RhZ2Ugb2Ygb3VyIGxpZmUuIFRoZSBwb2V0IHdhbnRzIHVzIHRvIHJlYWxpemUgdGhlIGZhY3QgdGhhdCBodW1hbiBsaWZlIGlzIGxpa2UgdGhlIHN0YWdlIG9mIGEgdGhlYXRyZS4gQQogICAgbWFuIGlzIGZhdGVkIHRvIGFjdCBzZXZlcmFsIHJvbGVzIGluIGhpcyBsaWZlLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj5jLiBSZWFkIHRoZSBnaXZlbiBsaW5lcyBhbmQgYW5zd2VyIHRoZSBxdWVzdGlvbnMgdGhhdCBmb2xsb3cuPC9zcGFuPgogICAgPGJyPgogICAgPGk+CiAgICAgICAgVGhlbiB0aGUgd2hpbmluZyBzY2hvb2xib3ksIHdpdGggaGlzIHNhdGNoZWwKICAgICAgICA8YnI+CiAgICAgICAgQW5kIHNoaW5pbmcgbW9ybmluZyBmYWNlLCBjcmVlcGluZyBsaWtlIHNuYWlsCiAgICAgICAgPGJyPgogICAgICAgIFVud2lsbGluZ2x5IHRvIHNjaG9vbC4KICAgIDwvaT4KICAgIDxicj48YnI+CiAgICA8Yj5pLiBXaGljaCBzdGFnZSBvZiBsaWZlIGlzIGJlaW5nIHJlZmVycmVkIHRvIGhlcmUgYnkgdGhlIHBvZXQ/PC9iPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIGNoaWxkaG9vZCBzdGFnZSBvZiBsaWZlIGlzIGJlaW5nIHJlZmVycmVkIHRvIGhlcmUgYnkgdGhlIHBvZXQuCiAgICA8YnI+PGJyPgogICAgPGI+aWkuIFdoaWNoIGZpZ3VyZSBvZiBzcGVlY2ggaGFzIGJlZW4gZW1wbG95ZWQgaW4gdGhlIHNlY29uZCBsaW5lPzwvYj4KICAgIDxicj4KICAgICYjMTAxNDA7IEluIHRoZSBzZWNvbmQgbGluZSwgc2ltaWxlLCBhIGZpZ3VyZSBvZiBzcGVlY2ggaGFzIGJlZW4gZW1wbG95ZWQgd2hlcmUgdGhlIGJveSBoYXMgYmVlbgogICAgY29tcGFyZWQgd2l0aCBzbmFpbCB1c2luZyBsaWtlLgogICAgPGJyPjxicj4KICAgIDxiPmlpaS4gV2hvIGlzIGNvbXBhcmVkIHRvIHRoZSBzbmFpbD88L2I+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgc2Nob29sLWdvaW5nIGJveSBpcyBjb21wYXJlZCB0byB0aGUgc25haWwuCiAgICA8YnI+PGJyPgogICAgPGI+aXYuIERvZXMgdGhlIGJveSBnbyB0byB0aGUgc2Nob29sIHdpbGxpbmdseT88L2I+CiAgICA8YnI+CiAgICAmIzEwMTQwO05vLCB0aGUgYm95IGRvZXNuJ3QgZ28gdG8gdGhlIHNjaG9vbCB3aWxsaW5nbHkuIEhpcyB1bndpbGxpbmduZXNzIGNhbiBlYXNpbHkgYmUgdGhlIG1vdGlvbiBvZgogICAgc25haWwgdG93YXJkcyBoaXMgc2Nob29sLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj4KICAgICAgICBkLiBTaW1pbGUgYW5kIG1ldGFwaG9yIGFyZSB0aGUgdHdvIG1ham9yIHBvZXRpYyBkZXZpY2VzIHVzZWQgaW4gdGhpcyBwb2VtLiBFeHBsYWluIGNpdGluZyBleGFtcGxlcyBvZgogICAgICAgIGVhY2guCiAgICA8L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBIZXJlIGluIHRoaXMgcG9lbSwgd2UgZmluZCBtYWpvciBwb2V0aWMgZGV2aWNlcyBhcyBzaW1pbGUgYW5kIG1ldGFwaG9yLiBUaGUgcG9ldCBoYXMgdXNlZCB0aGVzZQogICAgcG9ldGljIGRldmljZXMgYSBsb3QuIFRoZSBleGFtcGxlcyBvZiBzaW1pbGUgYW5kIG1ldGFwaG9yIG9mIHRoaXMgcG9lbSBhcmUgYXMgZm9sbG93czoKICAgIDxicj48YnI+CiAgICBhKSAmcXVvdDtBbGwgdGhlIHdvcmxkJ3MgYSBzdGFnZSZxdW90OyAtIE1ldGFwaG9yCiAgICA8YnI+CiAgICBiKSAmcXVvdDtBbmQgYWxsIHRoZSBtZW4gYW5kIHdvbWVuIG1lcmVseSBwbGF5ZXJzJnF1b3Q7IC0gTWV0YXBob3IKICAgIDxicj4KICAgIGMpICZxdW90O0FuZCBzaGluaW5nIG1vcm5pbmcgZmFjZSwgY3JlZXBpbmcgbGlrZSBhIHNuYWlsJnF1b3Q7IC0gU2ltaWxlCiAgICA8YnI+CiAgICBkKSAmcXVvdDtGdWxsIG9mIHN0cmFuZ2Ugb2F0aHMsIGFuZCBiZWFyZGVkIGxpa2UgdGhlIHBhcmQsJnF1b3Q7IC0gU2ltaWxlCiAgICA8YnI+CiAgICBlKSAmcXVvdDtTZWVraW5nIHRoZSBidWJibGUgcmVwdXRhdGlvbiZxdW90OyAtIE1ldGFwaG9yCiAgICA8YnI+CiAgICBmKSAmcXVvdDtIaXMgeW91dGhmdWwgaG9zZSwgd2VsbCBzYXYnZCwgYSB3b3JsZCB0b28gd2lkZSZxdW90OyAtIE1ldGFwaG9yLgogICAgPGJyPgogICAgZykgJnF1b3Q7YW5kIGhpcyBiaWcgbWFubHkgdm9pY2UsIFR1cm5pbmcgYWdhaW4gdG93YXJkIGNoaWxkaXNoIHRyZWJsZSZxdW90OyAtIE1ldGFwaG9yLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj4KICAgICAgICBlLiBXaGljaCBzdHlsZSBkb2VzIHRoZSBwb2V0IHVzZSB0byBleHByZXNzIGhpcyBlbW90aW9ucyBhYm91dCBob3cgaGUgdGhpbmtzIHRoYXQgdGhlIHdvcmxkIGlzIGEgc3RhZ2UKICAgICAgICBhbmQgYWxsIHRoZSBwZW9wbGUgbGl2aW5nIGluIGl0IGFyZSBtZXJlIHBsYXllcnM/CiAgICA8L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgcG9lbSBpcyB3cml0dGVuIGluIGJsYW5rIHZlcnNlIHdpdGggcmVndWxhciBtZXRyaWNhbCBidXQgdW5yaHltZWQgbGluZXMuIFRoZSBzdHlsZSBvZiB0aGUgcG9lbSBpcyBuYXJyYXRpdmUuIEluIHRoaXMgcG9lbSBoZSBoYXMgZXhwcmVzc2VkIGhpcyBpbm5lcm1vc3QgZW1vdGlvbnMgYWJvdXQgaG93IGhlIHRoaW5rcyB0aGF0IHRoZSB3b3JsZCBpcyBhIHN0YWdlIGFuZCBhbGwgdGhlIHBlb3BsZSBsaXZpbmcgaW4gaXQgYXJlIG1lcmUgcGxheWVycyBvciBjaGFyYWN0ZXJzLiBUaGVzZSBjaGFyYWN0ZXJzIGdvIHRocm91Z2ggc2V2ZW4gZGlmZmVyZW50IHBoYXNlcyBpbiB0aGVpciBsaXZlcy4gSGUgaGFzIGV4cGxhaW5lZCB0aGUgcmVhbCBhc3BlY3RzIG9mIGh1bWFuIGxpZmUgZm9yIGFsbCByZWFkZXJzIHRvIHVuZGVyc3RhbmQgdGhlIHJlYWxpdHkgb2YgbGlmZS4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Zi4gV2hhdCBpcyB0aGUgdGhlbWUgb2YgdGhpcyBwb2VtPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IEluIOKAmEFsbCB0aGUgd29ybGTigJlzIGEgc3RhZ2XigJkgU2hha2VzcGVhcmUgZGlzY3Vzc2VzIHRoZSBmdXRpbGl0eSBvZiBodW1hbml0eeKAmXMgcGxhY2UgaW4gdGhlIHdvcmxkLiBIZSBleHBsb3JlcyB0aGVtZXMgb2YgdGltZSwgYWdpbmcsIG1lbW9yeSwgYW5kIHRoZSBwdXJwb3NlIG9mIGxpZmUuIFRocm91Z2ggdGhlIG1vbm9sb2d1ZeKAmXMgY2VudHJhbCBjb25jZWl0LCB0aGF0IGV2ZXJ5b25lIGlzIHNpbXBseSBhIHBsYXllciBpbiBhIGxhcmdlciBnYW1lIHRoYXQgdGhleSBoYXZlIG5vIGNvbnRyb2wgb3ZlciwgaGUgYnJpbmdzIHRoZSB0aGVtZXMgdG9nZXRoZXIuIFNoYWtlc3BlYXJlIHRha2VzIHRoZSByZWFkZXIgdGhyb3VnaCB0aGUgc3RhZ2VzIG9mIGxpZmUsIHN0YXJ0aW5nIHdpdGggaW5mYW5jeSBhbmQgY2hpbGRob29kIGFuZCBlbmRpbmcgdXAgd2l0aCBhbiBvbGQgbWFuIHdob+KAmXMgYmVlbiBhIGxvdmVyLCBhIHNvbGRpZXIsIGFuZCBhIGp1ZGdlLiBUaGUg4oCcbWFu4oCdIGRpZXMgYWZ0ZXIgcmV2ZXJ0aW5nIGJhY2sgdG8gYSBzdGF0ZSB0aGF04oCZcyBjbG9zZSB0byBjaGlsZGhvb2QgYW5kIGluZmFuY3kuCiAgICA8YnI+PGJyPjxicj48YnI+CiAgICA8aDM+UmVmZXJlbmNlIGJleW9uZCB0aGUgdGV4dDwvaDM+CiAgICA8YnI+PGJyPgogICAgPHNwYW4+CiAgICAgICAgYS4gRGVzY3JpYmUgdGhlIHZhcmlvdXMgc3RhZ2VzIG9mIGh1bWFuIGxpZmUgcGljdHVyaXNlZCBpbiB0aGUgcG9lbSAmcXVvdDtBbGwgdGhlIHdvcmxkJ3MgYQogICAgICAgIHN0YWdlLiZxdW90OwogICAgPC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgQWNjb3JkaW5nIHRvIFNoYWtlc3BlYXJlLCB0aGUgd29ybGQgaXMgYSBzdGFnZSBhbmQgZXZlcnlvbmUgaXMgYSBwbGF5ZXIuIEhlIHNheXMgdGhhdCBldmVyeSBtYW4gaGFzIHNldmVuIHN0YWdlcyBkdXJpbmcgaGlzIGxpZmV0aW1lLiBUaGUgZmlyc3Qgc3RhZ2Ugb2YgYSBtYW4gaXMgY2hpbGRob29kLiBIZSBwbGF5cyBpbiB0aGUgYXJtcyBvZiBoaXMgbW90aGVyLiBIZSBvZnRlbiB2b21pdHMgYW5kIGNyaWVzIGluIHRoaXMgc3RhZ2UuIEluIGhpcyBzZWNvbmQgc3RhZ2UsIHRoZSBtYW4gaXMgYW4gdW53aWxsaW5nIHNjaG9vbCBnb2luZyBzdHVkZW50LiBIZSBiZWNvbWVzIGEgbG92ZXIgaW4gaGlzIHRoaXJkIHN0YWdlLiBIZSBpcyB2ZXJ5IGJ1c3kgY29tcG9zaW5nIGJhbGxhZHMgZm9yIGhpcyBiZWxvdmVkIGFuZCB5ZWFybnMgZm9yIGhlciBhdHRlbnRpb24uIEluIHRoZSBmb3VydGggc3RhZ2UsIGhlIGlzIGFnZ3Jlc3NpdmUgYW5kIGFtYml0aW91cy4gSGUgc2Vla3MgcmVwdXRhdGlvbiBpbiBhbGwgdGhhdCBoZSBkb2VzLiBIZSBpcyByZWFkeSB0byBndWFyZCBoaXMgY291bnRyeSBhbmQgYmVjb21lcyBhIHNvbGRpZXIuIEluIGhpcyBmaWZ0aCBzdGFnZSwgaGUgYmVjb21lcyBhIGZhaXIganVkZ2Ugd2l0aCBtYXR1cml0eSBhbmQgd2lzZG9tLiBJbiB0aGUgc2l4dGggc3RhZ2UsIGhlIGlzIHNlZW4gd2l0aCBsb29zZSBwYW50YWxvb25zIGFuZCBzcGVjdGFjbGVzLiBIaXMgbWFubHkgdm9pY2UgY2hhbmdlcyBpbnRvIGEgY2hpbGRpc2ggdHJlYmxlLiBUaGUgbGFzdCBzdGFnZSBvZiBhbGwgaXMgaGlzIHNlY29uZCBjaGlsZGhvb2QuIFNsb3dseSwgaGUgbG9zZXMgaGlzIGZhY3VsdGllcyBvZiBzaWdodCwgaGVhcmluZywgc21lbGwgYW5kIHRhc3RlIGFuZCBleGl0cyBmcm9tIHRoZSByb2xlcyBvZiBoaXMgbGlmZS4gVGh1cywgU2hha2VzcGVhcmUgaGFzIHByZXNlbnRlZCB0aGUgcGljdHVyZXMgb2YgdGhlIHNldmVuIHN0YWdlcyBvZiBhIG1hbuKAmXMgbGlmZSBpbiB0aGUgcG9lbSDigJhBbGwgdGhlIFdvcmxk4oCZcyBhIFN0YWdlLicKICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yi4gSXMgU2hha2VzcGVhcmUncyBjb21wYXJpc29uIG9mIGh1bWFuJ3MgbGlmZSB3aXRoIGEgZHJhbWEgc3RhZ2UgYXB0PyBIb3c/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgU2hha2VzcGVhcmUgaGFzIGNvbXBhcmVkIGh1bWFuIGxpZmUgdG8gYSBwbGF5IG9yIGRyYW1hIHBsYXllZCBieSBldmVyeSBtYW4gYW5kIHdvbWFuLiBIZSBoYXMgZGVzY3JpYmVkCiAgICBzZXZlbiBzdGFnZXMgb2YgbGlmZSwgd2hpY2ggYXJlIGxpa2UgdGhlIHNldmVuIGFjdHMgb2YgYSBwbGF5LgogICAgPGJyPjxicj4KICAgIFRoZSBjb21wYXJpc29uIG9mIHRoZSB3b3JsZCB0byBhIHN0YWdlIGFuZCBwZW9wbGUgdG8gYWN0b3JzIGdvZXMgYmVmb3JlIFNoYWtlc3BlYXJlLiBXZSBmaW5kIHN1Y2ggY29tcGFyaXNvbnMgbWFkZQogICAgaW4gbWFueSBwaGlsb3NvcGhpY2FsIGJvb2tzIHRvby4KICAgIDxicj48YnI+CiAgICBCdXQsIGV2ZW4gaWYgbm9ib2R5IGhhZCB3cml0dGVuIGFib3V0IGl0LCBpdCBpcyBieSBhIHNpbXBsZSBvYnNlcnZhdGlvbiBvZiBsaWZlIGFyb3VuZCB1cyB3ZSBmaW5kIHRoZSBzYW1lIHRoaW5nCiAgICBoYXBwZW5pbmcuIEV2ZXJ5Ym9keSB0YWtlcyBiaXJ0aCwgZ3Jvd3MsIGFuZCB3aXRoIGV2ZXJ5IGdyb3d0aCwgbWFuJ3MgbGlmZSBjaGFuZ2VzLiBIZSB3b3JrcywgZnVsZmlscyBkdXRpZXMgYW5kCiAgICByZXNwb25zaWJpbGl0aWVzIGFjY29yZGluZyB0byBhZ2UsIGFuZCBmaW5hbGx5IGxlYXZlcyB0aGUgd29ybGQuCiAgICA8YnI+PGJyPgogICAgVGhpcyBzaW1wbGUgb2JzZXJ2YXRpb24gdGVsbHMgdXMgU2hha2VzcGVhcmUncyBjb21wYXJpc29uIG9mIGh1bWFuIGxpZmUgd2l0aCBhIGRyYW1hIGlzIHZlcnkgYXB0LgoKICAgIDxicj4KICAgIDxicj48YnI+PGJyPjxicj4KICAgIDxzcGFuPklmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tPC9zcGFuPjxicj48YnI+CjwvYm9keT4KCjwvaHRtbD4=", "4": "", "5": ""}, "essays": {"1": "", "2": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "3": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "4": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "5": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4="}, "oap": {"1": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "2": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "3": ""}}