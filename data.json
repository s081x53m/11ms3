{"ld": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "10": "", "11": "", "12": "", "13": "", "14": "", "15": "", "16": "", "17": "", "18": "", "19": "", "20": ""}, "ss": {"1": "", "2": "", "3": "", "4": "", "5": "", "6": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "7": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4="}, "poems": {"1": "", "2": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDx0aXRsZT5Eb2M8L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChldnQpIHsKICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwgZmFsc2UpOwogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNvcHkiLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vIENoYW5nZSB0aGUgY29waWVkIHRleHQgaWYgeW91IHdhbnQKICAgICAgICAgICAgZXZ0LmNsaXBib2FyZERhdGEuc2V0RGF0YSgidGV4dC9wbGFpbiIsCiAgICAgICAgICAgICJDb3B5aW5nIGlzIG5vdCBhbGxvd2VkIG9uIHRoaXMgd2VicGFnZSIpOyAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGNvcHkgYWN0aW9uCiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sIGZhbHNlKTsKICAgIDwvc2NyaXB0PgogICAgPHN0eWxlPgogICAgICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fuczp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAnKTsKCiAgICAgICAgLyogTk8gU0VMRUNUICsgSElHSExJR0hUIENPTE9SICovCiAgICAgICAgKiB7CiAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQoKICAgICAgICAqOjpzZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgKjo6LW1vei1zZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgLyogc3R5bGluZyB0ZXh0IGNvbnRlbnQgKi8KICAgICAgICBib2R5IHsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDRweDsKICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjNweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgICAgd29yZC1zcGFjaW5nOiAycHg7CiAgICAgICAgfQoKICAgICAgICBjZW50ZXIgewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDsKICAgICAgICB9CgogICAgICAgIGgzIHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgICB9CgogICAgICAgIHNwYW4gewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj5BIFJlZCwgUmVkIFJvc2U8L2NlbnRlcj4KCiAgICA8YnI+CiAgICAKICAgIDxoMz5VbmRlcnN0YW5kaW5nIHRoZSB0ZXh0PC9oMz4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5BbnN3ZXIgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnMuPC9zcGFuPgogICAgPGJyPjxicj4KICAgIDxzcGFuPmEuIFRvIHdoaWNoIHR3byB0aGluZ3MgZG9lcyB0aGUgc3BlYWtlciBjb21wYXJlIGhpcyBsb3ZlIGluIHRoZSBmaXJzdCBzdGFuemE/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIHR3byB0aGluZ3MgdG8gd2hpY2ggdGhlIHNwZWFrZXIgY29tcGFyZXMgaGlzIGxvdmUgaW4gdGhlIGZpcnN0IHN0YW56YSBhcmUgcmVkIHJvc2UgYW5kIG1lbG9keSAobXVzaWMpLgogICAgPGJyPjxicj4KICAgIDxzcGFuPmIuIFdoYXQgZG9lcyB0aGUgc3BlYWtlciBwcm9taXNlIGluIHRoZSBzZWNvbmQgYW5kIHRoaXJkIHN0YW56YXM/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIHNwZWFrZXIgcHJvbWlzZXMgdG8gbG92ZSBoaXMgYmVsb3ZlZCB1bnRpbCB0aGUgZWFydGhseSBzZWFzIGhhdmUgYmVjb21lIGRyeSwgcm9ja3MgaGF2ZSBtZWx0ZWQgYnkgdGhlIGhlYXQgb2YgdGhlIHN1biBhbmQgaHVtYW4gbGlmZSBoYXMgZW5kZWQgaW4gdGhlIHNlY29uZCBhbmQgdGhpcmQgc3Rhbnphcy4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5jLiBXaGF0IGltYWdlcnkgZG9lcyBoZSB1c2UgaW4gaGlzIHByb21pc2UsIGFuZCB3aHkgZG8geW91IHRoaW5rIGhlIHVzZXMgc3VjaCBsYW5ndWFnZT88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBIZSB1c2VzIHRoZSBpbWFnZXJ5IG9mIGRyeSBzZWFzLCBtZWx0ZWQgcm9ja3MsIGVuZGVkIGh1bWFuIGxpZmUgaW4gdGhlIHNlY29uZCBhbmQgdGhpcmQgc3RhbnphIGFuZCBhbiBpbWFnZSBvZiBhIGxvbmcgam91cm5leSBpbiB0aGUgZm91cnRoIHN0YW56YS4gSSB0aGluayBoZSB1c2VzIHN1Y2ggbGFuZ3VhZ2UgYmVjYXVzZSBoaXMgbG92ZSBpcyBzbyBkZWVwIGFuZCB0cnVlIGZvciBoaXMgYmVsb3ZlZC4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5kLiBJbiB0aGUgbGFzdCBzdGFuemEsIHdoYXQgZXZlbnQgaXMgYWJvdXQgdG8gaGFwcGVuIGJ5IG1lbnRpb25pbmcgdGhlIG51bWJlciBvZiBtaWxlcz88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBJbiB0aGUgbGFzdCBzdGFuemEsIHRoZSBldmVudCBvZiByZWNvbmNpbGlhdGlvbiBpcyBhYm91dCB0byBoYXBwZW4gYnkgbWVudGlvbmluZyB0aGUgbnVtYmVyIG9mIG1pbGVzLgogICAgPGJyPjxicj4KICAgIDxzcGFuPmUuIFdoaWNoIGltYWdlIGluIHRoZSBwb2VtIGRvIHlvdSBmaW5kIHRoZSBtb3N0IG1lbW9yYWJsZSBvciBzdXJwcmlzaW5nIGFuZCB3aHk/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIG1vc3QgbWVtb3JhYmxlIG9yIHN1cnByaXNpbmcgaW1hZ2UgSSBmaW5kIGluIHRoZSBwb2VtIGlzIG9mIHRoZSBkcnkgc2VhcyB0aHJvdWdob3V0IHRoZSB3b3JsZCwgYmVjYXVzZSB0aGUgc3BlYWtlcidzIHByb21pc2UgaXMgbWFuYWdlZCBpbiBhIHZlcnkgaW50ZXJlc3Rpbmcgd2F5LiAKICAgIDxicj48YnI+CiAgICA8YnI+PGJyPgogICAgPGJyPgogICAgPGgzPlJlZmVyZW5jZSB0byB0aGUgY29udGV4dDwvaDM+CiAgICA8YnI+PGJyPgogICAgPHNwYW4+YS4gV2hhdCBjYW4geW91IGluZmVyIGFib3V0IHRoZSBzcGVha2VyJnJzcXVvO3MgZGV2b3Rpb24gdG8gaGlzIGJlbG92ZWQgZnJvbSB0aGUgZm9sbG93aW5nIGxpbmVzPzwvc3Bhbj4KICAgIDxicj4KICAgIDxpPkFuZCBJIHdpbGwgY29tZSBhZ2FpbiwgbXkgbG92ZSwgVGhvJnJzcXVvOyBpdCB3ZXJlIHRlbiB0aG91c2FuZCBtaWxlITwvaT4KICAgIDxicj4KICAgICYjMTAxNDA7ICBUaGlzIGJlYXV0aWZ1bCBwcm9taXNpbmcgbGluZSBoYXMgYmVlbiB0YWtlbiBmcm9tIFJvYmVydCBCdXJucyBsb3ZlIHBvZW0gJyBBIFJlZCwgUmVkIFJvc2UuIFdlIGZpbmQgdGhpcyBsaW5lIGF0IHRoZSBlbmQgb2YgdGhlIGZvdXJ0aCBzdGFuemEuIEhlcmUsIHRoZSBzcGVha2VyIGlzIGluIGRlZXAgbG92ZSB3aXRoIGhpcyBiZWxvdmVkLiBIZSBpcyBtYWtpbmcgYSBwcm9taXNlIHdpdGggaGlzIGJlbG92ZWQgYnkgc2F5aW5nIHRoYXQgbm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqb3VybmV5IGlzIGhlIHdpbGwgcmV0dXJuIHRvIGhlciBsaWZlLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj5iLiBXaGF0IGlzIHRoZSB0aGVtZSBvZiB0aGUgcG9lbT88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgbW9zdCBpbXBvcnRhbnQgdGhlbWUgb2YgIkEgUmVkLCBSZWQgUm9zZSIgaXMgdGhlIHBvd2VyIG9mIGxvdmUuIFRoZSBzcGVha2VyIG1ha2VzIGl0IGNsZWFyIHRoYXQgaGUgd2lsbCBsaWtlIGhlciBubyBtYXR0ZXIgd2hhdCB3aWxsIGVudGVyIGJldHdlZW4gdGhlbS4gSGlzIGxvdmUgaXMgc28gZGVlcCBhbmQgaW5lc3RpbWFibGUgdGhhdCBpdCB3aWxsIG5ldmVyIGJlIGV4dGluZ3Vpc2hlZC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yy4gUGFyYXBocmFzZSB0aGUgd2hvbGUgcG9lbSBpbnRvIHNpbXBsZSBwcm9zZSBmb3JtLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7SW4gUm9iZXJ0IEJ1cm5zJ3MgIkEgUmVkLCBSZWQgUm9zZSwiIHRoZSBzcGVha2VyIGJpZHMgZmFyZXdlbGwgdG8gaGlzIGJlbG92ZWQgYW5kIHByb21pc2VzIHRvIHJldHVybiB0byBoZXIsIG5vIG1hdHRlciB0aGUgaGFyZHNoaXAuCiAgICA8YnI+PGJyPgogICAgVGhlIHBvZW0gb3BlbnMgd2l0aCB0aGUgc3BlYWtlciBjb21wYXJpbmcgaGlzIGJlbG92ZWQgdG8gYSByZWQgcm9zZSBhbmQgcHJhaXNpbmcgaGVyIGJlYXV0eS4KICAgIDxicj48YnI+CiAgICBIZSBkZWNsYXJlcyB0aGF0IGhpcyBsb3ZlIGZvciBoZXIgaXMgc28gZGVlcCBhbmQgZXZlcmxhc3RpbmcgdGhhdCBpdCB3aWxsIHN1cnZpdmUgdW50aWwgdGhlIHNlYSBkcmllcyB1cC4KICAgIDxicj48YnI+CiAgICBIZSBwcm9taXNlcyB0aGF0IGFsdGhvdWdoIGhlIG11c3QgbGVhdmUsIGhlIHdpbGwgY29tZSBiYWNrLCBldmVuIGlmIGhlIG11c3QgdHJhdmVsIHRlbiB0aG91c2FuZCBtaWxlcyB0byBkbyBzby4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+CiAgICAgICAgZC4gTGl0ZXJhcnkgZGV2aWNlcyBhcmUgdG9vbHMgdGhhdCBlbmFibGUgdGhlIHdyaXRlcnMgdG8gcHJlc2VudCB0aGVpciBpZGVhcywgZW1vdGlvbnMsIGFuZCBmZWVsaW5ncyBhbmQKICAgICAgICBhbHNvIGhlbHAgdGhlIHJlYWRlcnMgdW5kZXJzdGFuZCB0aG9zZSBtb3JlIHByb2ZvdW5kIG1lYW5pbmdzLiBBbmFseXplIHRoZSBwb2VtIGluIHRlcm1zIG9mIHRoZSBsaXRlcmFyeQogICAgICAgIGRldmljZXMgc3VjaCBhcyBzaW1pbGUsIHN5bWJvbGlzbSwgaW1hZ2VyeSwgYWxsaXRlcmF0aW9uLCBhbmQgYXNzb25hbmNlLgogICAgPC9zcGFuPgogICAgPGJyPjxicj4KICAgICYjMTAxNDA7IFRoZSBwb2V0IGVtcGxveXMgc2V2ZXJhbCBsaXRlcmFyeSBkZXZpY2VzIGxpa2Ugc2ltaWxlLCBzeW1ib2xpc20sIGltYWdlcnksIGFsbGl0ZXJhdGlvbiwgYW5kIGFzc29uYW5jZSB0byBzaG93IHRoZSBiZWF1dHkgb2YgaGlzIGJlbG92ZWQgYW5kIHRoZSBwb3dlciBvZiBoaXMgbG92ZS4KICAgIDxicj48YnI+CiAgICBUaGUgZmlyc3QgbGl0ZXJhcnkgdG9vbCB1c2VkIGluIHRoZSBwb2VtIGlzIHNpbWlsZS4gSXQgaXMgYW4gZXhwcmVzc2lvbiB3aGljaCBpcyB1c2VkIHRvIGNvbXBhcmUgYW4gb2JqZWN0IG9yIGEgcGVyc29uIHdpdGggc29tZXRoaW5nIGVsc2UgdG8gbWFrZSBpdHMgbWVhbmluZyBjbGVhbiB0byB0aGUgcmVhZGVycy4gVGhlcmUgYXJlIHR3byBzaW1pbGVzIHVzZWQgaW4gdGhpcyBwb2VtLiBUaGV5IGFyZSB1c2VkIHdoZW4gdGhlIHNwZWFrZXIgY29tcGFyZXMgaGlzIGJlbG92ZWQgd2l0aCBhIHJlZCByb3NlIGFuZCBzd2VldCBtZWxvZHkuCiAgICA8YnI+PGJyPgogICAgU3ltYm9saXNtIGlzIGFub3RoZXIgbGl0ZXJhcnkgZGV2aWNlIHdoaWNoIGlzIHVzZWQgdG8gc2lnbmlmeSBpZGVhcyBhbmQgcXVhbGl0aWVzIGdpdmluZyB0aGVtIHN5bWJvbGljIG1lYW5pbmcuIEhlcmUgdGhlIHBvZXQgaGFzIHVzZWQg4oCYcm9zZeKAmSBhcyBhIHN5bWJvbCBvZiBsb3ZlLgogICAgPGJyPjxicj4KICAgIEltYWdlcnkgaXMgYSBkaXN0aW5jdCByZXByZXNlbnRhdGlvbiBvZiBzb21ldGhpbmcgdGhhdCBjYW4gYmUgdW5kZXJzdGFuZCB0aHJvdWdoIGZpdmUgc2Vuc2VzLiBSb2JlcnQgaGFzIHVzZWQgdmlzdWFsIGltYWdlcnkgaW4gdGhlIHBvZW0gc3VjaCBhcyBhIHJlZCByb3NlLiAgVGhlcmUgaXMgYSB2aXN1YWwgcGljdHVyZSBvZiBhIHJlZCByb3NlIGluIG91ciBtaW5kIHdoZW4gdGhlIHNwZWFrZXIgY29tcGFyZXMgaGlzIGJlbG92ZWQgd2l0aCBhIHJlZCByb3NlLiBXaGVuIGhlIGVxdWF0ZXMgaGVyIHRvIHRoZSBzd2VldCBtZWxvZHksIGF1ZGl0b3J5IGltYWdlcnkgaXMgdXNlZC4gVG8gY29udmV5IHRoZSBpbnRlbnNpdHkgb2YgaGlzIGFmZmVjdGlvbiwgaGUgdGhlbiBzd2l0Y2hlcyB0byBoeXBlcmJvbGljIGltYWdlcywgYnkgZXhwcmVzc2luZyB0aGF0IGhlIHdpbGwgbG92ZSBoZXIgdW50aWwgdGhlIHNlYXMgYmVjb21lIGRyeSBhbmQgdGhlIHJvY2tzIG1lbHQgaW4gdGhlIHN1bi4gV2UgY2FuIHZpZXcgdGhlIHdvcmxkIG9mIGRyeSBzZWFzIGFuZCBtZWx0ZWQgcm9ja3MgaW4gb3VyIG1pbmQuCiAgICA8YnI+PGJyPgogICAgQWxsaXRlcmF0aW9uIGlzIHRoZSByZXBldGl0aW9uIG9mIGNvbnNvbmFudCBzb3VuZHMgaW4gdGhlIHNhbWUgbGluZSBzdWNoIGFzIC9sLyBhbmQgL3IvIGluIOKAnE8gbXkgTG92ZSBpcyBMaWtlIGEgcmVkLCByZWQgcm9zZS7igJ0KICAgIDxicj48YnI+CiAgICBBc3NvbmFuY2UgaXMgYSBsaXRlcmFyeSBkZXZpY2UgaW4gd2hpY2ggdGhlIHJlcGV0aXRpb24gb2Ygdm93ZWwgc291bmRzIG9jY3VycyBpbiB0aGUgc2FtZSBsaW5lLiBJbiB0aGUgbGluZSDigJhBbmQgSSB3aWxsIGxvdmUgdGhlZSBzdGlsbCwgbXkgZGVhcuKAmSwgdGhlIHZvd2VsIHNvdW5kIC9pLyBpcyByZXBlYXRlZC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+ZS4gV2hhdCBpcyBoeXBlcmJvbGU/IEV4cGxhaW4gaXRzIHB1cnBvc2UgY2l0aW5nIGV4YW1wbGVzIG9mIGh5cGVyYm9sZSB1c2VkIGluIHRoZSBwb2VtLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IEh5cGVyYm9sZSBpcyBhIGxpdGVyYXJ5IHRlY2huaXF1ZSB3aGljaCBpcyB1c2VkIHRvIGV4YWdnZXJhdGUgYSBzdGF0ZW1lbnQgZm9yIHRoZSBzYWtlIG9mIGVtcGhhc2lzLiBUaGUgcG9ldCBoYXMgdXNlZCBoeXBlcmJvbGEgaW4gdGhlIGxhc3QgbGluZSBvZiB0aGUgc2Vjb25kIHN0YW56YSwg4oCcVGlsbCBhJyB0aGUgc2VhcyBnYW5nIGRyeeKAnS4gSGUgc2F5cyB0aGF0IGhpcyBsb3ZlIHdpbGwgZmxvdyBldmVuIHdoZW4gdGhlIHNlYXMgZHJpZXMgdXAuIFRoZSBzZWNvbmQgb25lIGlzIGluIHRoZSB0aGlyZCBzdGFuemEgd2hlcmUgdGhlIHNwZWFrZXIgY2xhaW1lZCwg4oCcQW5kIHRoZSByb2NrcyBtZWx0IHdpJyB0aGUgc3Vu4oCdLiAgSGVyZSwgdGhlIHNwZWFrZXIgc2VlbXMgdG8gYmUgZXhhZ2dlcmF0aW5nIGhpcyBlbW90aW9ucyBpbiB0aGVzZSBsaW5lcyB0byBpbGx1c3RyYXRlIGhpcyBkZXNpcmUgdG8gbG92ZSBoZXIgZm9yZXZlci4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Zi4gV2hhdCBpcyByZWZyYWluPyBXaHkgaXMgaXQgdXNlZCBpbiB0aGUgcG9lbT8gRXhwbGFpbiBjaXRpbmcgYW4gZXhhbXBsZSBmcm9tIHRoZSBwb2VtLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFJlZnJhaW4gaXMgYSBwb2V0aWMgZGV2aWNlIGluIHBvZXRyeSB0aGF0IGZvY3VzZXMgb25seSBvbiByZXBlYXRlZCBsaW5lcyBhdCBhIGNlcnRhaW4gZGlzdGFuY2UuIEl0IGlzIHVzZWQgdG8gcmVpbmZvcmNlIHRoZSBtYWluIHRoZW0gb24gcG9pbnQgb2YgYSBwb2VtLiBJdCBpcyBhbHNvIHVzZWQgdG8gZW1waGFzaXplIHNvbWV0aGluZyBhbmQgdG8gcHJvZHVjZSByaHl0aG0gaW4gdGhlIHBvZW0gYXMgd2VsbC4gV2UgZmluZCBhIHJlZnJhaW4gaGVyZSBpbiB0aGlzIHBvZW0gaW4gdGhlIHNlY29uZCwgdGhpcmQsIGFuZCBmb3VydGggc3RhbnphcyBhbmQgdGhleSBhcmUgYXMgZm9sbG93czoKICAgIDxicj4KICAgIC0gQW5kIEkgd2lsbCBsb3ZlIHRoZWUgc3RpbGwsIG15IGRlYXIKICAgIDxicj4KICAgIC0gVGlsbCBhJyB0aGUgc2VhcyBnYW5nIGRyeQogICAgPGJyPgogICAgLSBBbmQgZmFyZSB0aGVlIHdlZWwKICAgIDxicj48YnI+CiAgICA8YnI+PGJyPgogICAgPGJyPgogICAgPGgzPlJlZmVyZW5jZSBiZXlvbmQgdGhlIHRleHQ8L2gzPgogICAgPGJyPjxicj4KICAgIDxzcGFuPmEuIFdoYXQga2luZCBvZiBsb3ZlIGlzIGV4cHJlc3NlZCBpbiAmcXVvdDtBIFJlZCwgUmVkIFJvc2UmcXVvdDs/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgSW4gdGhpcyBwb2VtLCBBIFJlZCwgUmVkIFJvc2UsIHRoZSBwb2V0IGhhcyBleHByZXNzZWQgaGlzIHJvbWFudGljIGFuZCBpbmVzdGltYWJsZSBsb3ZlIGZvciBoaXMgYmVsb3ZlZC4gSGUgcHJvbWlzZXMgdG8gbG92ZSBoaXMgYmVsb3ZlZCB1bnRpbCB0aGUgZWFydGhseSBzZWFzIGhhdmUgYmVjb21lIGRyeSwgcm9ja3MgaGF2ZSBtZWx0ZWQgYnkgdGhlIGhlYXQgb2YgdGhlIHN1biBhbmQgaHVtYW4gbGlmZSBoYXMgZW5kZWQgYW5kIG1ha2VzIGl0IGNsZWFyIHRoYXQgaGUgd2lsbCBsb3ZlIGhlciB0aWxsIGhpcyBsYXN0IGJyZWF0aC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yi4gRG8geW91IHRoaW5rIHRoYXQgbG92ZSBoYXMgcG93ZXI/IFdoeSBkbyB0aGUgcG9ldHMgY29tcG9zZSBwb2VtcyBhZGRyZXNzaW5nIHRoZWlyIGJlbG92ZWQ/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgWWVzLCBJIHRoaW5rIHRoYXQgbG92ZSBoYXMgcG93ZXIuIEluIGZhY3QgSSBjb25zaWRlciBsb3ZlIGFzIGEgbW9zdCBwb3dlcmZ1bCB0aGluZyB0aGF0IGV4aXN0cyBpbiB0aGUgZW50aXJlIHVuaXZlcnNlLiBMb3ZlIGlzIHRoZSB0aGluZyB0aGF0IGJvdW5kcyBwZW9wbGUgYW5kIGtlZXAgdGhlbSB0b2dldGhlci4gTG92ZSBjYW4gc29tZXRpbWVzIGxlYWQgcGVvcGxlIHRvd2FyZHMgcGVyZmVjdGlvbiB3aGVyZWFzIGl0IG1heSBicmluZyBkZXN0cnVjdGl2ZSByZXN1bHRzIHRvby4gTW9zdCBvZiB0aGUgcG9ldHMgY29tcG9zZSB0aGVpciBwb2VtcyBhZGRyZXNzaW5nIHRoZWlyIGJlbG92ZWQgYmVjYXVzZSBwb2VtIGlzIHRoZSBiZWF1dGlmdWwgYW5kIGJlc3QgbWVkaXVtIHRvIGV4cHJlc3MgdGhlIGZlZWxpbmcgb2YgYSBwZXJzb24uIEV4cHJlc3NpbmcgbG92ZSBpbiBwb2VtIGFkZHMgbW9yZSBiZWF1dHkgdG8gdGhlIHN0b3J5IHRoYW4gaW4gYW5vdGhlciBmb3JtLiBUaHVzIHRoZSBwb2V0cyBjb21wb3NlIHBvZW1zIGFkZHJlc3NpbmcgdGhlaXIgYmVsb3ZlZC4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yy4gUG9ldHJ5IGlzIHRoZSBleHByZXNzaW9uIG9mIGZlZWxpbmcgYW5kIGVtb3Rpb25zLiBFeHBsYWluLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IE1vc3Qgb2YgdGhlIGxpdGVyYXJ5IHdvcmtzIG9mIGV4dHJhb3JkaW5hcnkgbWVyaXQgaGF2ZSBiZWVuIHdyaXR0ZW4gdGhyb3VnaCB0aGUgbWVhbnMgb2YgcG9ldHJ5LiBQb2V0cnkgaXMgdGhlIHJlcHJlc2VudGF0aW9uIG9mIHRob3VnaHRzIGFuZCBmZWVsaW5ncyB0aGF0IGVuYWJsZXMgcGVvcGxlIHRvIGV4cHJlc3MgdGhlbXNlbHZlcyBpbiB3cml0aW5nLiBQb2V0cnkgaXMgYSBwZXJmZWN0IHdheSB0byBleHByZXNzIGxvdmUsIGVtb3Rpb25zLCBpbWFnaW5hdGlvbiwgYW5kIGV4Y2hhbmdlIGlkZWFzIGFuZCB0aG91Z2h0cyB3aXRoIG90aGVycy4gUG9ldHJ5IGhvbGRzIHBvd2VyIHRvIGV4cGxhaW4gdGhvc2UgaW50aW1hdGUgbW9tZW50cyBvZiB0aGUgbGlmZSBvZiBodW1hbiBiZWluZ3MuIEl04oCZcyBub3Qgb25seSBhIGpveSB0aGF0IHBvZXRzIGNhbiByZWxhdGUgdG8gdGhlaXIgdmVyc2VzLCBidXQgYWxzbyBncmllZiwgZGVzcGFpciwgZ3JpZWYsIHBhaW4sIGRvdWJ0LCBoYXRyZWQsIGxvdmUsIGNvbXBhc3Npb24sIGRlc2lyZSwgcHJhaXNlLCBmYWl0aCwgcmVzcGVjdCwgYW5kIGhvcGUuIFRoZXJlZm9yZSwgcG9ldHJ5IGNhbiBiZSB0YWtlbiBhcyB0aGUgZXhwcmVzc2lvbiBvZiBmZWVsaW5ncyBhbmQgZW1vdGlvbnMuCiAgICA8YnI+CiAgICA8YnI+PGJyPjxicj48YnI+CgogICAgPHNwYW4+SWYgeW91IGhhdmUgYW55IHN1Z2dlc3Rpb25zIG9yIGZlZWRiYWNrcywgcGxlYXNlIHdyaXRlIHRvIHVzIGF0IHBsdXMyaGVscEBnbWFpbC5jb208L3NwYW4+CgogICAgPGJyPjxicj4KPC9ib2R5PgoKPC9odG1sPg==", "3": "", "4": "", "5": ""}, "essays": {"1": "", "2": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "3": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "4": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "5": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4="}, "oap": {"1": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "2": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCjwvaGVhZD4KCjxib2R5PgogICAgPGJyPgogICAgPGNlbnRlcj4KICAgICAgICA8aDMgc3R5bGU9ImNvbG9yOnJlZCI+Tm90ZXMgd2lsbCBiZSBhdmFpbGFibGUgc29vbjwvaDM+CiAgICA8L2NlbnRlcj4KICAgIDxicj4KICAgIElmIHlvdSBoYXZlIGFueSBzdWdnZXN0aW9ucyBvciBmZWVkYmFja3MsIHBsZWFzZSB3cml0ZSB0byB1cyBhdCBwbHVzMmhlbHBAZ21haWwuY29tCjwvYm9keT4KCjwvaHRtbD4=", "3": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KCjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgIDx0aXRsZT5Eb2M8L3RpdGxlPgogICAgPHNjcmlwdD4KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uIChldnQpIHsKICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfSwgZmFsc2UpOwogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNvcHkiLCBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgICAgIC8vIENoYW5nZSB0aGUgY29waWVkIHRleHQgaWYgeW91IHdhbnQKICAgICAgICAgICAgZXZ0LmNsaXBib2FyZERhdGEuc2V0RGF0YSgidGV4dC9wbGFpbiIsCiAgICAgICAgICAgICJDb3B5aW5nIGlzIG5vdCBhbGxvd2VkIG9uIHRoaXMgd2VicGFnZSIpOyAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGNvcHkgYWN0aW9uCiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIH0sIGZhbHNlKTsKICAgIDwvc2NyaXB0PgogICAgPHN0eWxlPgogICAgICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fuczp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAnKTsKCiAgICAgICAgLyogTk8gU0VMRUNUICsgSElHSExJR0hUIENPTE9SICovCiAgICAgICAgKiB7CiAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQoKICAgICAgICAqOjpzZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgKjo6LW1vei1zZWxlY3Rpb24gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgIH0KCiAgICAgICAgLyogc3R5bGluZyB0ZXh0IGNvbnRlbnQgKi8KICAgICAgICBib2R5IHsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDRweDsKICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjNweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgICAgd29yZC1zcGFjaW5nOiAycHg7CiAgICAgICAgfQoKICAgICAgICBjZW50ZXIgewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDsKICAgICAgICB9CgogICAgICAgIGgzIHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgICB9CgogICAgICAgIHNwYW4gewogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KCjxib2R5PgoKICAgIDxicj4KICAgIDxjZW50ZXI+UmVmdW5kPC9jZW50ZXI+CgogICAgPGJyPgoKICAgIDxoMz5VbmRlcnN0YW5kaW5nIHRoZSB0ZXh0PC9oMz4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5BbnN3ZXIgdGhlIGZvbGxvd2luZyBxdWVzdGlvbnMuPC9zcGFuPgogICAgPGJyPgogICAgPHNwYW4+YS4gV2h5IGRvZXMgV2Fzc2Vya29wZiBkZW1hbmQgYSByZWZ1bmQgb2YgaGlzIHR1aXRpb24gZmVlcyBmcm9tIHRoZSBzY2hvb2w/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgV2Fzc2Vya29wZiBkZW1hbmRzIGEgcmVmdW5kIG9mIGhpcyB0dWl0aW9uIGZlZXMgZnJvbSB0aGUgc2Nob29sIGJlY2F1c2UgaGUgY2xhaW1zIHRoYXQgaGUgZGlkbuKAmXQgbGVhcm4gYW55dGhpbmcgZnJvbSB0aGUgc2Nob29sIGFuZCBoaXMgMTggeWVhcnMgZWR1Y2F0aW9uIG1hZGUgaGltIG5vdGhpbmcgYnV0IGFuIGluY29tcGV0ZW50IGFzcy4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Yi4gV2h5IGRvZXMgV2Fzc2Vya29wZiBjb25zaWRlciBoaW1zZWxmIGdvb2QgZm9yIG5vdGhpbmc/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgV2Fzc2Vya29wZiBjb25zaWRlcnMgaGltc2VsZiBnb29kIGZvciBub3RoaW5nIGJlY2F1c2UgaGlzIHNjaG9vbCB0YXVnaHQgaGltIG5vdGhpbmcgYW5kIGhlIGJlY29tZXMgZmFpbHVyZSBtYW55IHRpbWVzIGluIGhpcyBsaWZlIGluIHRoZSBtYXR0ZXIgb2YgZ2V0dGluZyBhIGpvYiB0b28uCiAgICA8YnI+PGJyPjxicj4KICAgIDxzcGFuPmMuIFdoYXQgZGlkIHRoZSB0ZWFjaGVycyBkZWNpZGUgdG8gZG8gd2hlbiBXYXNzZXJrb3BmIGFza2VkIGZvciBhIHJlZnVuZD88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgdGVhY2hlcnMgYXBwcm92ZWQgV2Fzc2Vya29wZidzIHJlcXVlc3QgZm9yIGEgcmUtZXhhbWluYXRpb24gYW5kIHBhc3MgaGltIGluIGFsbCBzdWJqZWN0cywgZXZlbiBpZiBoaXMgYW5zd2VycyB3ZXJlIGluY29ycmVjdC4gVGhleSBhZ3JlZWQgdG8gcHJvdmUgV2Fzc2Vya29wZidzIGFuc3dlcnMgdG8gdGhlaXIgcXVlc3Rpb25zIGNvcnJlY3QuCiAgICA8YnI+PGJyPjxicj4KICAgIDxzcGFuPmQuIFdoeSBkaWQgV2Fzc2Vya29wZiBnaXZlIHJpZGljdWxvdXMgYW5zd2Vycz8gV2h5IGRpZCB0aGUgdGVhY2hlcnMgYWNjZXB0IHRoZXNlIGFuc3dlcnM/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgV2Fzc2Vya29wZiBnYXZlIHJpZGljdWxvdXMgYW5zd2VycyBzbyB0aGF0IGhlIGNvdWxkIGZhaWwgdGhlIGV4YW0gYnkgYW55IG1lYW5zIG5lY2Vzc2FyeSBhbmQgcmVjZWl2ZSBhIHJlZnVuZC4gVGVhY2hlcnMgYWNjZXB0ZWQgaGlzIGFuc3dlcnMgYmVjYXVzZSB0aGV5IHdhbnRlZCBoaW0gdG8gcGFzcyB0aGUgZXhhbSB0byBwcmVzZXJ2ZSB0aGUgc2Nob29sJ3MgcmVwdXRhdGlvbi4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+ZS4gSG93IGRvZXMgdGhlIE1hdGhlbWF0aWNzIE1hc3RlciBkZXNjcmliZSBXYXNzZXJrb3BmJnJzcXVvO3MgY2hhcmFjdGVyPzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBNYXRoZW1hdGljcyBNYXN0ZXIgZGVzY3JpYmUgV2Fzc2Vya29wZuKAmXMgY2hhcmFjdGVyIGFzIGEgc2x5IGFuZCBjcmFmdHkgaW5kaXZpZHVhbCB3aG8gaW50ZW5kcyB0byBkZWxpYmVyYXRlbHkgZmFpbCBoaXMgZXhhbSBpbiBvcmRlciB0byByZWNvdXAgaGlzIHR1aXRpb24gZmVlLiBIZSBpcyBhIHVuaXF1ZSBpbmRpdmlkdWFsIHdobyBpcnJpdGF0ZXMgYWxsIG9mIHRoZSB0ZWFjaGVycyB3aXRoIGhpcyBhYnVzaXZlIGxhbmd1YWdlLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj5mLiBIb3cgZGlkIHRoZSB0ZWFjaGVycyBvdXR3aXQgV2Fzc2Vya29wZj88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyAgSGUgZ2F2ZSB3cm9uZyBhbmQgcmlkaWN1bG91cyBhbnN3ZXJzIHRvIGZhaWwgdGhlIHRlc3QuIEJ1dCB0aGUgdGVhY2hlcnMgd2VyZSBjbGV2ZXJlciB0aGFuIGhpbS4gQWZ0ZXIgYXNraW5nIFdhc3NlcmtvcGYgdGhlIGVhc3kgcXVlc3Rpb24sIHRoZSBtYXRoZW1hdGljcyB0ZWFjaGVyIHNhaWQgdGhhdCBoZSBmYWlsZWQgdGhlIGV4YW0gYW5kIGFza2VkIGhpbSB0byBjYWxjdWxhdGUgdGhlIGFtb3VudCB0aGUgc2Nob29sIGhhZCB0byByZWZ1bmQuIEhlIGRpZCBpdCB2ZXJ5IHdlbGwuIFRoZSBtYXRoZW1hdGljcyB0ZWFjaGVycyBzYWlkIHRoYXQgaGUgc29sdmVkIHRoZSBkaWZmaWN1bHQgcXVlc3Rpb24gYXMgaGUgd2FzIGEgbWF0aGVtYXRpY2FsIGdlbml1cy4gVGhlIHRlYWNoZXJzIGRlY2xhcmVkIHRoYXQgaGUgcGFzc2VkIHRoZSBleGFtLiBJbiB0aGlzIHdheSwgdGhleSBvdXR3aXR0ZWQgV2Fzc2Vya29wZi4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+Zy4gV2hhdCBpcyB0aGUgZmluYWwganVkZ21lbnQgb24gV2FzZXJrb3BmJnJzcXVvO3MgZGVtYW5kIG9mIHJlZnVuZD88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBBdCBsYXN0LCBoZSBnZXRzIG5vdGhpbmcgb24gaGlzIGRlbWFuZCBvZiByZWZ1bmQuIFRoZSBwcmluY2lwYWwgZGVjbGFyZXMgdGhhdCBXYXNzZXJrb3BmIGhhcyBwYXNzZWQgdGhlIHJlLWV4YW1pbmF0aW9uIHdpdGggZGlzdGluY3Rpb24gaW4gZXZlcnkgc3ViamVjdCwgYW5kIGhhcyBhZ2FpbiBzaG93biB0aGF0IGhlIGlzIGVudGl0bGVkIHRvIHRoZSBjZXJ0aWZpY2F0ZSB0aGV5IGF3YXJkZWQgaGltIG9uIGhpcyBncmFkdWF0aW9uLgogICAgPGJyPjxicj48YnI+PGJyPjxicj4KICAgIDxoMz5SZWZlcmVuY2UgdG8gdGhlIGNvbnRleHQ8L2gzPgogICAgPGJyPjxicj4KICAgIDxzcGFuPmEuIFJlYWQgdGhlIGV4dHJhY3QgZnJvbSB0aGUgcGxheSBnaXZlbiBiZWxvdyBhbmQgYW5zd2VyIHRoZSBxdWVzdGlvbnMgdGhhdCBmb2xsb3c6PC9zcGFuPgogICAgPGJyPgogICAgPGk+CiAgICAgICAgJmxkcXVvO0l0JnJzcXVvO3MgcG9zc2libGUgSSZyc3F1bzt2ZSBjaGFuZ2VkLiBXaGF0IHRoZSBoZWxsJiM4MjMwOyEgWW91ciBjbGFzcyByZWNvcmRzIHdpbGwgc2hvdwogICAgICAgIEkmcnNxdW87dmUgZ290IGEgcmlnaHQgdG8gY29tZSBoZXJlLiZyZHF1bzsKICAgIDwvaT4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5pLiBXaG8gaXMgdGhlIHNwZWFrZXI/IFdobyBpcyBoZSBzcGVha2luZyB0bz88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBXYXNzZXJrb3BmIGlzIHRoZSBzcGVha2VyLiBIZSdzIHNwZWFraW5nIHRvIHRoZSBwcmluY2lwYWwgb2YgaGlzIGZvcm1lciBzY2hvb2wuCiAgICA8YnI+PGJyPgogICAgPHNwYW4+aWkuIFdoeSBpcyB0aGUgc3BlYWtlciBzYXkgdGhlc2Ugd29yZHM/PC9zcGFuPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhlIHNwZWFrZXIgc2F5cyB0aGVzZSB3b3JkcyBiZWNhdXNlIGhlIGlzIGRpc3NhdGlzZmllZCB3aXRoIGhpcyBlZHVjYXRpb25hbCByZWNvcmRzIGZyb20gaGlzCiAgICBwcmV2aW91cyBzY2hvb2wsIHdoaWNoIGhlIG9idGFpbmVkIGVpZ2h0ZWVuIHllYXJzIGFnby4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5paWkuIFdoZXJlIGlzIHRoZSBzcGVha2VyIGF0IHRoaXMgbW9tZW50Pzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoZSBzcGVha2VyIGlzIGluIHRoZSBQcmluY2lwYWwncyBvZmZpY2UgYXQgdGhpcyBtb21lbnQuCiAgICA8YnI+PGJyPjxicj4KICAgIDxzcGFuPmIuIFJlYWQgdGhlIGV4dHJhY3QgZGlhbG9ndWUgZ2l2ZW4gYmVsb3cgYW5kIGFuc3dlciB0aGUgcXVlc3Rpb25zIHRoYXQgZm9sbG93Ojwvc3Bhbj4KICAgIDxicj4KICAgIDxpPgogICAgICAgICZsZHF1bztUSEUgU1RBRkY6IChib3dpbmcsIGhlYXJ0aWx5KSBIb3cgZG8geW91IGRvPwogICAgICAgIDxicj4KICAgICAgICBXQVNTRVJLT1BGOiBXaG8gdGhlIGhlbGwgYXJlIHlvdT8gU2l0IGRvd24sIHlvdSBsb2FmZXJzISAoSGUgZ3JpbnMsIHdhaXRpbmcgdG8gYmUgdGhyb3duIG91dCkKICAgICAgICA8YnI+CiAgICAgICAgVEhFIFBSSU5DSVBBTDogSG93IGRhcmUgeW91ICZuZGFzaDsmcmRxdW87CiAgICA8L2k+CiAgICA8YnI+PGJyPgogICAgPHNwYW4+aS4gV2hhdCBpcyB0byBiZSB0aGUgcmVzcG9uc2UgdG8gJmxzcXVvO0hvdyBkbyB5b3UgZG8/JnJzcXVvOzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7ICdJIGFtIGZpbmUnIGlzIHRvIGJlIHRoZSByZXNwb25zZSB0byAnSG93IGRvIHlvdSBkbycuCiAgICA8YnI+PGJyPgogICAgPHNwYW4+aWkuIElzIFdhc3NlcmtvcGYmcnNxdW87cyByZXNwb25zZSBwb2xpdGUgZW5vdWdoIHRvIHRoZSBzdGFmZj88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBObywgV2Fzc2Vya29wZidzIHJlc3BvbnNlIHRvIHRoZSBzdGFmZiBpc24ndCBwb2xpdGUgZW5vdWdoLiBIZSB1c2VzIGRlcm9nYXRvcnkgbGFuZ3VhZ2UgYWdhaW5zdAogICAgdGhlbS4KICAgIDxicj48YnI+CiAgICA8c3Bhbj5paWkuIEhvdyBkb2VzIFdhc3NlcmtvcGYgcmVidWtlIHRoZSBzdGFmZj88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBXYXNzZXJrb3BmIHJlYnVrZXMgdGhlIHN0YWZmLCBjYWxsaW5nIHRoZW0gJnF1b3Q7bG9hZmVycyZxdW90OyBhbmQgYXNraW5nLCAmcXVvdDtXaG8gdGhlIGhlbGwKICAgIGFyZSB5b3U/JnF1b3Q7CiAgICA8YnI+PGJyPgogICAgPHNwYW4+aXYuIFdoYXQgZG9lcyB0aGUgcHJpbmNpcGFsIG1lYW4gYnkgJmxzcXVvO0hvdyBkYXJlIHlvdSAtJnJzcXVvOz88L3NwYW4+CiAgICA8YnI+CiAgICAmIzEwMTQwOyBUaGUgUHJpbmNpcGFsIGlzIHJlZmVycmluZyB0byBXYXNzZXJrb3BmJ3MgZGFyZSB0byBtYWtlIGFidXNpdmUgcmVtYXJrcyBhYm91dCBtYXN0ZXJzIHdoZW4gaGUKICAgIHNheXMsICdIb3cgZGFyZSB5b3U/JwogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj5jLiBFeHBsYWluIHRoZSBmb2xsb3dpbmcgbGluZSBvZiB0aGUgcGxheTo8L3NwYW4+CiAgICA8YnI+CiAgICA8aT4mbGRxdW87QmVjYXVzZSBJIGRpZG4mcnNxdW87dCBnZXQgbXkgbW9uZXkmcnNxdW87cyB3b3J0aCwgdGhhdCZyc3F1bztzIHdoeSEmcmRxdW87PC9pPgogICAgPGJyPgogICAgJiMxMDE0MDsgVGhpcyBsaW5lIHdhcyBzcG9rZW4gYnkgdGhlIG1haW4gY2hhcmFjdGVyIG9mIHRoZSBwbGF5LCBXYXNzZXJrb3BmLiBJbiB0aGlzIGxpbmUsIFdhc3NlcmtvcGYgZXhwbGFpbnMgaGlzIHJlYXNvbiBmb3IgaGlzIGFycml2YWwgYW5kIGRlbWFuZCBhIHJlZnVuZCB0byB0aGUgc2Nob29sJ3MgcHJpbmNpcGFsLiBBY2NvcmRpbmcgdG8gaGltLCBoaXMgZWR1Y2F0aW9uIGZyb20gc2Nob29sIGRpZCBwcm92aWRlIGhpbSBub3RoaW5nLiBIZSBpcyBmaXJlZCBmcm9tIHRoZSBqb2IgYW5kIGlzIGluIGZpbmFuY2lhbCBjcmlzaXMuIFdhc3NlcmtvcGYgaXMsIHRoZXJlZm9yZSwganVzdGlmaWVkIGluIGNsYWltaW5nIGZvciBhIHJlZnVuZC4gSGUgYWRkcyB0aGF0IGEgcmUtZXhhbWluYXRpb24gd2lsbCBwcm92ZSB0aGF0IGhpcyBkZW1hbmQgaXMgdmFsaWQuCiAgICA8YnI+PGJyPjxicj4KICAgIDxzcGFuPmQuIFdoYXQgaXMgdGhlIHRoZW1lIG9mIHRoZSBwbGF5Pzwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFRoaXMgcGxheSBpcyBhIHNhdGlyZSBvbiB0b2RheSdzIGVkdWNhdGlvbmFsIHN5c3RlbSwgd2hpY2ggaGFzIGZhaWxlZCB0byBwcmVwYXJlIHN0dWRlbnRzIGZvciBsaWZlLiBUaGlzIHBsYXkgc2hvd2Nhc2VzIHRlYWNoZXJzJyB3aXQgaW4gdGhlIGZhY2Ugb2YgYW4gaWxsLW5hdHVyZWQgb2xkIHB1cGlsIFdhc3NlcmtvcGYgd2hvIHJldHVybnMgdG8gaGlzIG9sZCBzY2hvb2wgd2l0aCBhbiBhYnN1cmQgZGVtYW5kIG9mIGEgcmVmdW5kIGFzIGhlIGhhcyBnb3Qgbm90aGluZyByZWFkaW5nIHRoZXJlLgogICAgPGJyPjxicj48YnI+CiAgICA8c3Bhbj5lLiBTa2V0Y2ggdGhlIGNoYXJhY3RlciBvZiBXYXNzZXJrb3BmLjwvc3Bhbj4KICAgIDxicj4KICAgICYjMTAxNDA7IFdhc3NlcmtvcGYgaXMgYSBmb3J0eS15ZWFyLW9sZCBwb29yIGFuZCBncmVlZHkgbWFuIHdobyB3YXMgYm9ybiBpbiBIdW5nYXJ5LiBIZSBpcyBhIHNob3J0LXRlbXBlcmVkIG1hbiB3aG8gaGFzIGJlZW4gZmlyZWQgc2V2ZXJhbCB0aW1lcyBmb3IgaGlzIGJhZCBtYW5uZXJzIGFuZCBydWRlIGJlaGF2aW91ci4gV2Fzc2Vya29wZiBzZWVtcyB0byBiZSB0aGUgdHlwZSBvZiBwZXJzb24gd2hvIGRvZXMgbm90IGRvIGhpcyBkdXR5IGFuZCBibGFtZXMgb3RoZXJzLiBXaGlsZSBhdCBzY2hvb2wsIGhlIGp1c3Qgd2FudGVkIHRvIHBhc3MgYW5kIGRpZCBub3Qgc3R1ZHkgd2VsbC4gSGUgZG9lcyBub3QgZXZlbiBrbm93IGFib3V0IGZvcmVpZ24gZXhjaGFuZ2UuIFRoYXQgaXMgd2h5IGhlIGRpZCBub3QgZ2V0IGEgZ29vZCBqb2IuIEhlIGhpbXNlbGYgc2F5cyBoZSBpcyBnb29kIGZvciBub3RoaW5nLiBXYXNzZXJrb3BmIGFsc28gc291bmRzIGxpa2UgYW4gdW5kaXNjaXBsaW5lZCBtYW4gd2l0aCBubyBnb29kIG1hbm5lcnMuIEhlIGRvZXMgbm90IHJlc3BlY3QgaGlzIHRlYWNoZXJzIGFuZCB1c2VzIGJhZCB3b3JkcyBhbmQgZGVyb2dhdG9yeSBsYW5ndWFnZSB3aXRoIHRoZW0uIEhlIHRoaW5rcyB0aGF0IGhlIGlzIGNsZXZlciBlbm91Z2ggdG8gZ2V0IHRoZSByZWZ1bmQgYnV0IGJlY2F1c2Ugb2YgaGlzIGZvb2xpc2huZXNzIGFuZCBzdHVwaWRpdHksIGhlIGZhbGxzIGluIGhpcyBNYXRoZW1hdGljcyB0ZWFjaGVyc+KAmSB0cmFwLgogICAgPGJyPjxicj48YnI+PGJyPgogICAgPGgzPlJlZmVyZW5jZSBiZXlvbmQgdGhlIHRleHQ8L2gzPgogICAgPGJyPgogICAgPHNwYW4+CiAgICAgICAgYS4gVGhlIHBsYXkgaXMgYSBzYXRpcmUgb24gdGhlIHByZXNlbnQgZGF5IGVkdWNhdGlvbiBzeXN0ZW0uIERvIHlvdSB0aGluayB0aGF0IG91ciBlZHVjYXRpb24gc3lzdGVtIGRvZXMKICAgICAgICBub3QgcHJlcGFyZSBzdHVkZW50cyBmb3IgbGlmZT8gRGlzY3Vzcy4KICAgIDwvc3Bhbj4KICAgIDxicj48YnI+CiAgICAmIzEwMTQwOyBZZXMsIEkgYmVsaWV2ZSB0aGF0IG91ciBlZHVjYXRpb25hbCBzeXN0ZW0gZG9lcyBub3QgYWRlcXVhdGVseSBwcmVwYXJlIHN0dWRlbnRzIGZvciBsaWZlLiBJIHRoaW5rIHRoYXQgb3VyIGVkdWNhdGlvbiBzeXN0ZW0gZG9lcyBub3QgcHJlcGFyZSBzdHVkZW50cyBmb3IgbGlmZS4gT3VyIGVkdWNhdGlvbiBzeXN0ZW0gaXMgYmFzZWQgb24gbWVtb3JpemF0aW9uLiBTdHVkZW50cyBoYXJkbHkgbGVhcm4gc2tpbGxzIHVzZWZ1bCBmb3IgcmVhbCBsaWZlLiBCdXQgdG9kYXnigJlzIHN0dWRlbnRzIGFsc28gZG8gbm90IGNhcmUgYWJvdXQgcmVhbCBrbm93bGVkZ2UuIFRoZXkganVzdCB3YW50IHRvIHBhc3MgdGhlIGV4YW1zIHdpdGggZ29vZCBtYXJrcyByYXRoZXIgdGhhbiBsZWFybmluZy4gQ291cnNlcyBhcmUgbW9yZSB0aGVvcmV0aWNhbCB0aGFuIHByYWN0aWNhbC4gT3VyIGN1cnJpY3VsdW0gZG9lc27igJl0IHByZXBhcmUgdXMgZm9yIG91ciBmdXR1cmUgc3RydWdnbGUgYW5kIHN1cnZpdmFsLiBGb3IgZXhhbXBsZSwgd2UgYXJlIHRhdWdodCB0aGUgdGhpbmdzIHdoaWNoIGFyZSB1c2VsZXNzIGluIG91ciByZWFsIGxpZmUuIEl0IG1ha2VzIHN0dWRlbnRzIGR1bGwgYW5kIGxlc3MgY3JlYXRpdmUgaW4gcHJhY3RpY2FsIGxpZmUuIEhlbmNlLCBzYWRseSBpdCBpcyB0cnVlIHRoYXQgb3VyIGVkdWNhdGlvbiBzeXN0ZW0gZG9lcyBub3QgcHJlcGFyZSB1cyBmb3IgbGlmZS4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+CiAgICAgICAgYi4gT3VyIGVkdWNhdGlvbiBzeXN0ZW0gZm9jdXNlcyBvbiBtZW1vcmlzYXRpb24gcmF0aGVyIHRoYW4gY3JlYXRpdmUgdGhpbmtpbmcuIERvIHlvdSB0aGluayB0aGUKICAgICAgICBrbm93bGVkZ2UgaW1wYXJ0ZWQgYnkgZWR1Y2F0aW9uIG1heSBub3QgaGF2ZSBwcmFjdGljYWwgcmVsZXZhbmNlIGluIG9uZSZyc3F1bztzIGRheS10by1kYXkgbGlmZT8gV2hvIGRvCiAgICAgICAgeW91IGJsYW1lIGZvciB0aGlzPwogICAgPC9zcGFuPgogICAgPGJyPjxicj4KICAgICYjMTAxNDA7IFllcywgSSBiZWxpZXZlIHRoYXQgdGhlIGtub3dsZWRnZSBpbXBhcnRlZCBieSBlZHVjYXRpb24gbWF5IG5vdCBiZSBwcmFjdGljYWwgaW4gZGFpbHkgbGlmZS4gT3VyIGVkdWNhdGlvbiBzeXN0ZW0gaXMgbW9yZSBiYXNlZCBvbiBtZW1vcml6YXRpb24gdGhlbiBvbiBsZWFybmluZyB0aGUgc2tpbGxzIHVzZWZ1bCBmb3IgcmVhbCBsaWZlLiBJIHRoaW5rIHRoYXQgb3VyIGdvdmVybm1lbnQgaXMgbWFpbmx5IHJlc3BvbnNpYmxlIGZvciB0aGUgY2F1c2UuIFRoZSBnb3Zlcm5tZW50IHNob3VsZCBtYWtlIGN1cnJpY3VsdW0gbW9yZSBwcmFjdGljYWwgdGhhbiB0aGVvcmV0aWNhbCBzbyB0aGF0IHRoZSBzdHVkZW50cyBjYW4gbGVhcm4gdGhlIHRoaW5nIHByYWN0aWNhbGx5IHJhdGhlciB0aGFuIGZyb20gd3JpdGluZyBpbnRvIHRoZSBwYXBlcnMuIFN0dWRlbnRzIGFyZSBmb2N1c2VkIG9uIHJlbWVtYmVyaW5nIHRoYW4gaW4gZG9pbmcgdGhlIHRoaW5ncyBjcmVhdGl2ZWx5LiBDcmVhdGl2aXR5IGhhcyBubyBwbGFjZSBpbiB0aGVpciBsaXZlcy4gVGhleSBqdXN0IHdhbnQgdG8gcGFzcyB0aGUgZXhhbXMgd2l0aCBnb29kIG1hcmtzIHJhdGhlciB0aGFuIGxlYXJuaW5nLiBTdHVkZW50cyB0b28gYXJlIHJlc3BvbnNpYmxlIGZvciB0aGlzIGJlY2F1c2UgdGhleSBhcmUgZG9pbmcgdGhlIHRoaW5ncyBibGluZGx5IHdoYXRldmVyIHRoZXkgYXJlIHNhaWQgYW5kIHRhdWdodCB3aXRob3V0IGZvY3VzaW5nIG9uIGxlYXJuaW5nIHRoaW5ncyBwcmFjdGljYWxseS4gVGhleSBhcmUgZG9pbmcgdGhlaXIgam9iIGFzIGFuIGVsZXBoYW50IGluIGEgY2lyY3VzLiBUaHVzIEkgYmxhbWUgdGhlIGdvdmVybm1lbnQgYW5kIHRoZSBzdHVkZW50cyBmb3IgdGhpcy4KICAgIDxicj48YnI+PGJyPgogICAgPHNwYW4+CiAgICAgICAgYy4gTW9zdCBvZiB0aGUgc3R1ZGVudHMgd2FudCB0byBsZWFybiBqdXN0IGZvciBleGFtaW5hdGlvbiByYXRoZXIgdGhhbiBrbm93bGVkZ2UuIERvIHlvdSB0aGluayB0aGF0CiAgICAgICAgY2VydGlmaWNhdGUgd2lsbCBoZWxwIHRoZW0gaW4gdGhlaXIgZnV0dXJlIGNhcmVlcj8KICAgIDwvc3Bhbj4KICAgIDxicj48YnI+CiAgICAmIzEwMTQwOyAgSXTigJlzIHRydWUgdGhhdCBtb3N0IG9mIHRoZSBzdHVkZW50cyB3YW50IHRvIGxlYXJuIGp1c3QgZm9yIGV4YW1pbmF0aW9uIHJhdGhlciB0aGFuIGtub3dsZWRnZS4gVGhleSB3YW50IHRvIGdldCBoaWdoZXIgbWFya3Mgb25seSBieSBob29rIG9yIGNyb29rLiBCdXQgdGhhdCBjZXJ0aWZpY2F0ZSB3b27igJl0IGhlbHAgdGhlbSBpbiB0aGVpciBmdXR1cmUgY2FyZWVyLiBTdHVkZW50cyB3aG8gb25seSBwcmVwYXJlIGZvciBleGFtcyB3b27igJl0IGVuam95IGNyZWRlbnRpYWxzIHRocm91Z2hvdXQgdGhlaXIgZnV0dXJlIGNhcmVlcnMuIFRoZXkncmUgZmFyIGZyb20gdGhlIGNvbmNlcHQgb2Yga25vd2xlZGdlLCBidXQgdGhleSB0cnVzdCBxdWljayBzb2x1dGlvbnMgdG8gcGFzcyB5b3VyIGV4YW1zLiBUaGUgbWV0aG9kIHRoZXkgaGF2ZSBjaG9zZW4gZG9lc24ndCBiZW5lZml0IHRoZWlyIGZ1dHVyZS4gU2luY2UgY2VydGlmaWNhdGVzIG5ldmVyIGRlbW9uc3RyYXRlIGdlbnVpbmUga25vd2xlZGdlIG9yIHNraWxscywgdHJ1ZSBrbm93bGVkZ2Ugd2lsbCBjZXJ0YWlubHkgYmUgbGFja2luZyBpbiB0aGUgZnV0dXJlLiBNYW55IGNlcnRpZmljYXRlIGhvbGRlcnMgZG9u4oCZdCBnZXQgcHJvcGVyIGpvYiBkdWUgdG8gaW5zdWZmaWNpZW50IHNraWxsIGFuZCBoZW5jZSB0aGV5IGFyZSBmb3JjZWQgdG8gZG8gbWFudWFsIGpvYnMgaW4gZm9yZWlnbiBjb3VudHJpZXMgYWx0aG91Z2ggdGhleSBoYXZlIGRlZ3JlZSBpbiBOZXBhbC4gQnkgdGhpcyB3ZSBjYW4gc2F5IHRoYXQgdGhlIGNlcnRpZmljYXRlIGlzIGp1c3QgYSBwaWVjZSBvZiBwYXBlciBhbmQgZ2FpbmluZyBjZXJ0aWZpY2F0ZSBieSBtZW1vcml6aW5nIHJhdGhlciB0aGFuIGxlYXJuaW5nIHdvdWxkIGxlYWQgYSBwZXJzb24gdG8gYSBkZWFkIGVuZC4KCgogICAgPGJyPjxicj4KICAgIDxicj48YnI+PGJyPjxicj4KCiAgICA8c3Bhbj5JZiB5b3UgaGF2ZSBhbnkgc3VnZ2VzdGlvbnMgb3IgZmVlZGJhY2tzLCBwbGVhc2Ugd3JpdGUgdG8gdXMgYXQgcGx1czJoZWxwQGdtYWlsLmNvbTwvc3Bhbj4KCiAgICA8YnI+PGJyPgo8L2JvZHk+Cgo8L2h0bWw+"}}